<?php
/**
 * ConnectConfidenceMatchMatchResultsMatchScoreExplainPlan
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Creditsafe Connect
 *
 * Creditsafe Connect is a REST API that provides access to the <a href=\"https://www.creditsafe.com/gb/en/more/about/our-data.html\">Creditsafe Global Company Database.</a> This allows you to: <ul><li>Control your master data</li><li>Utilise up-to-date Business and Director information, enhancing your onboarding and qualification processes</li><li>Recieve alerts when your customer's and supplier's Credit Report changes</li></ul> <h2>Quick Start</h2> To start your Creditsafe Connect API integration you will need to have activated your account and set a password by following the instructions in your Welcome Email. If you have not received a Welcome Email please contact your Creditsafe Account Manager.</br></br>By default, you will have been setup on our Sandbox environment.</br></br> Using a REST API client construct an `/authenticate` POST request and enter your username & password (case-sensitive) into the POST body. A successful response will return an  `authentication token`.</br></br> Use the `authentication token` in an `Authorization` header on all other Creditsafe Connect calls as proof of your authenticity.  <h2>Environments</h2>Production Environment baseurl: <code> https://connect.creditsafe.com/v1 </code> </br> Sandbox Test Environment baseurl:  <code>https://connect.sandbox.creditsafe.com/v1</code> <h2>Resources</h2> <ul> <li><a href=\"https://creditsafe.github.io/connect-docs/cs_connectv1-15.html\">OpenAPI</a> specification.</li><li><a href=\"https://www.getpostman.com/collections/4406bbddb81c308db8ff\">Postman Collection</a> of the most common example calls to Creditsafe Connect.</li> <li><a href=\"https://connect-portal.creditsafe.com\"> A Front End Demo Site</a>. Use this as a quick easy way to validate your username & password and form requests.</li> <li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/categories/7000007071/folders/7000018640\"> Help Articles</a>  including: <ul><li>FAQs</li><li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000053487-connect-api-data-dictionaries\"> Data Dictionaries </a></li><li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000054765-connect-api-data-availability-per-country\"> Data Availability per Country </a></li><li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000054656-connect-api-feature-availability-per-country\"> Feature Availability Matrix</a></li></ul></ul>
 *
 * OpenAPI spec version: 1.5.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.34
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ConnectConfidenceMatchMatchResultsMatchScoreExplainPlan Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ConnectConfidenceMatchMatchResultsMatchScoreExplainPlan implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Connect.ConfidenceMatch.MatchResults_matchScoreExplainPlan';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'match_score' => 'int',
'match_score_alpha' => 'string',
'match_score_local_id' => 'string',
'match_score_name' => 'string',
'match_score_house_no' => 'string',
'match_score_street' => 'string',
'match_score_po_box' => 'string',
'match_score_city' => 'string',
'match_score_state' => 'string',
'match_score_post_code' => 'string',
'match_score_country' => 'string',
'match_score_vat_no' => 'string',
'match_score_reg_no' => 'string',
'match_score_phone_no' => 'string',
'match_score_simple_value' => 'string',
'match_score_num' => 'string'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'match_score' => null,
'match_score_alpha' => null,
'match_score_local_id' => null,
'match_score_name' => null,
'match_score_house_no' => null,
'match_score_street' => null,
'match_score_po_box' => null,
'match_score_city' => null,
'match_score_state' => null,
'match_score_post_code' => null,
'match_score_country' => null,
'match_score_vat_no' => null,
'match_score_reg_no' => null,
'match_score_phone_no' => null,
'match_score_simple_value' => null,
'match_score_num' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'match_score' => 'matchScore',
'match_score_alpha' => 'matchScoreAlpha',
'match_score_local_id' => 'matchScoreLocal Id',
'match_score_name' => 'matchScoreName',
'match_score_house_no' => 'matchScoreHouseNo',
'match_score_street' => 'matchScoreStreet',
'match_score_po_box' => 'matchScorePoBox',
'match_score_city' => 'matchScoreCity',
'match_score_state' => 'matchScoreState',
'match_score_post_code' => 'matchScorePostCode',
'match_score_country' => 'matchScoreCountry',
'match_score_vat_no' => 'matchScoreVatNo',
'match_score_reg_no' => 'matchScoreRegNo',
'match_score_phone_no' => 'matchScorePhoneNo',
'match_score_simple_value' => 'matchScoreSimpleValue',
'match_score_num' => 'matchScoreNum'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'match_score' => 'setMatchScore',
'match_score_alpha' => 'setMatchScoreAlpha',
'match_score_local_id' => 'setMatchScoreLocalId',
'match_score_name' => 'setMatchScoreName',
'match_score_house_no' => 'setMatchScoreHouseNo',
'match_score_street' => 'setMatchScoreStreet',
'match_score_po_box' => 'setMatchScorePoBox',
'match_score_city' => 'setMatchScoreCity',
'match_score_state' => 'setMatchScoreState',
'match_score_post_code' => 'setMatchScorePostCode',
'match_score_country' => 'setMatchScoreCountry',
'match_score_vat_no' => 'setMatchScoreVatNo',
'match_score_reg_no' => 'setMatchScoreRegNo',
'match_score_phone_no' => 'setMatchScorePhoneNo',
'match_score_simple_value' => 'setMatchScoreSimpleValue',
'match_score_num' => 'setMatchScoreNum'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'match_score' => 'getMatchScore',
'match_score_alpha' => 'getMatchScoreAlpha',
'match_score_local_id' => 'getMatchScoreLocalId',
'match_score_name' => 'getMatchScoreName',
'match_score_house_no' => 'getMatchScoreHouseNo',
'match_score_street' => 'getMatchScoreStreet',
'match_score_po_box' => 'getMatchScorePoBox',
'match_score_city' => 'getMatchScoreCity',
'match_score_state' => 'getMatchScoreState',
'match_score_post_code' => 'getMatchScorePostCode',
'match_score_country' => 'getMatchScoreCountry',
'match_score_vat_no' => 'getMatchScoreVatNo',
'match_score_reg_no' => 'getMatchScoreRegNo',
'match_score_phone_no' => 'getMatchScorePhoneNo',
'match_score_simple_value' => 'getMatchScoreSimpleValue',
'match_score_num' => 'getMatchScoreNum'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['match_score'] = isset($data['match_score']) ? $data['match_score'] : null;
        $this->container['match_score_alpha'] = isset($data['match_score_alpha']) ? $data['match_score_alpha'] : null;
        $this->container['match_score_local_id'] = isset($data['match_score_local_id']) ? $data['match_score_local_id'] : null;
        $this->container['match_score_name'] = isset($data['match_score_name']) ? $data['match_score_name'] : null;
        $this->container['match_score_house_no'] = isset($data['match_score_house_no']) ? $data['match_score_house_no'] : null;
        $this->container['match_score_street'] = isset($data['match_score_street']) ? $data['match_score_street'] : null;
        $this->container['match_score_po_box'] = isset($data['match_score_po_box']) ? $data['match_score_po_box'] : null;
        $this->container['match_score_city'] = isset($data['match_score_city']) ? $data['match_score_city'] : null;
        $this->container['match_score_state'] = isset($data['match_score_state']) ? $data['match_score_state'] : null;
        $this->container['match_score_post_code'] = isset($data['match_score_post_code']) ? $data['match_score_post_code'] : null;
        $this->container['match_score_country'] = isset($data['match_score_country']) ? $data['match_score_country'] : null;
        $this->container['match_score_vat_no'] = isset($data['match_score_vat_no']) ? $data['match_score_vat_no'] : null;
        $this->container['match_score_reg_no'] = isset($data['match_score_reg_no']) ? $data['match_score_reg_no'] : null;
        $this->container['match_score_phone_no'] = isset($data['match_score_phone_no']) ? $data['match_score_phone_no'] : null;
        $this->container['match_score_simple_value'] = isset($data['match_score_simple_value']) ? $data['match_score_simple_value'] : null;
        $this->container['match_score_num'] = isset($data['match_score_num']) ? $data['match_score_num'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets match_score
     *
     * @return int
     */
    public function getMatchScore()
    {
        return $this->container['match_score'];
    }

    /**
     * Sets match_score
     *
     * @param int $match_score match_score
     *
     * @return $this
     */
    public function setMatchScore($match_score)
    {
        $this->container['match_score'] = $match_score;

        return $this;
    }

    /**
     * Gets match_score_alpha
     *
     * @return string
     */
    public function getMatchScoreAlpha()
    {
        return $this->container['match_score_alpha'];
    }

    /**
     * Sets match_score_alpha
     *
     * @param string $match_score_alpha match_score_alpha
     *
     * @return $this
     */
    public function setMatchScoreAlpha($match_score_alpha)
    {
        $this->container['match_score_alpha'] = $match_score_alpha;

        return $this;
    }

    /**
     * Gets match_score_local_id
     *
     * @return string
     */
    public function getMatchScoreLocalId()
    {
        return $this->container['match_score_local_id'];
    }

    /**
     * Sets match_score_local_id
     *
     * @param string $match_score_local_id match_score_local_id
     *
     * @return $this
     */
    public function setMatchScoreLocalId($match_score_local_id)
    {
        $this->container['match_score_local_id'] = $match_score_local_id;

        return $this;
    }

    /**
     * Gets match_score_name
     *
     * @return string
     */
    public function getMatchScoreName()
    {
        return $this->container['match_score_name'];
    }

    /**
     * Sets match_score_name
     *
     * @param string $match_score_name match_score_name
     *
     * @return $this
     */
    public function setMatchScoreName($match_score_name)
    {
        $this->container['match_score_name'] = $match_score_name;

        return $this;
    }

    /**
     * Gets match_score_house_no
     *
     * @return string
     */
    public function getMatchScoreHouseNo()
    {
        return $this->container['match_score_house_no'];
    }

    /**
     * Sets match_score_house_no
     *
     * @param string $match_score_house_no match_score_house_no
     *
     * @return $this
     */
    public function setMatchScoreHouseNo($match_score_house_no)
    {
        $this->container['match_score_house_no'] = $match_score_house_no;

        return $this;
    }

    /**
     * Gets match_score_street
     *
     * @return string
     */
    public function getMatchScoreStreet()
    {
        return $this->container['match_score_street'];
    }

    /**
     * Sets match_score_street
     *
     * @param string $match_score_street match_score_street
     *
     * @return $this
     */
    public function setMatchScoreStreet($match_score_street)
    {
        $this->container['match_score_street'] = $match_score_street;

        return $this;
    }

    /**
     * Gets match_score_po_box
     *
     * @return string
     */
    public function getMatchScorePoBox()
    {
        return $this->container['match_score_po_box'];
    }

    /**
     * Sets match_score_po_box
     *
     * @param string $match_score_po_box match_score_po_box
     *
     * @return $this
     */
    public function setMatchScorePoBox($match_score_po_box)
    {
        $this->container['match_score_po_box'] = $match_score_po_box;

        return $this;
    }

    /**
     * Gets match_score_city
     *
     * @return string
     */
    public function getMatchScoreCity()
    {
        return $this->container['match_score_city'];
    }

    /**
     * Sets match_score_city
     *
     * @param string $match_score_city match_score_city
     *
     * @return $this
     */
    public function setMatchScoreCity($match_score_city)
    {
        $this->container['match_score_city'] = $match_score_city;

        return $this;
    }

    /**
     * Gets match_score_state
     *
     * @return string
     */
    public function getMatchScoreState()
    {
        return $this->container['match_score_state'];
    }

    /**
     * Sets match_score_state
     *
     * @param string $match_score_state match_score_state
     *
     * @return $this
     */
    public function setMatchScoreState($match_score_state)
    {
        $this->container['match_score_state'] = $match_score_state;

        return $this;
    }

    /**
     * Gets match_score_post_code
     *
     * @return string
     */
    public function getMatchScorePostCode()
    {
        return $this->container['match_score_post_code'];
    }

    /**
     * Sets match_score_post_code
     *
     * @param string $match_score_post_code match_score_post_code
     *
     * @return $this
     */
    public function setMatchScorePostCode($match_score_post_code)
    {
        $this->container['match_score_post_code'] = $match_score_post_code;

        return $this;
    }

    /**
     * Gets match_score_country
     *
     * @return string
     */
    public function getMatchScoreCountry()
    {
        return $this->container['match_score_country'];
    }

    /**
     * Sets match_score_country
     *
     * @param string $match_score_country match_score_country
     *
     * @return $this
     */
    public function setMatchScoreCountry($match_score_country)
    {
        $this->container['match_score_country'] = $match_score_country;

        return $this;
    }

    /**
     * Gets match_score_vat_no
     *
     * @return string
     */
    public function getMatchScoreVatNo()
    {
        return $this->container['match_score_vat_no'];
    }

    /**
     * Sets match_score_vat_no
     *
     * @param string $match_score_vat_no match_score_vat_no
     *
     * @return $this
     */
    public function setMatchScoreVatNo($match_score_vat_no)
    {
        $this->container['match_score_vat_no'] = $match_score_vat_no;

        return $this;
    }

    /**
     * Gets match_score_reg_no
     *
     * @return string
     */
    public function getMatchScoreRegNo()
    {
        return $this->container['match_score_reg_no'];
    }

    /**
     * Sets match_score_reg_no
     *
     * @param string $match_score_reg_no match_score_reg_no
     *
     * @return $this
     */
    public function setMatchScoreRegNo($match_score_reg_no)
    {
        $this->container['match_score_reg_no'] = $match_score_reg_no;

        return $this;
    }

    /**
     * Gets match_score_phone_no
     *
     * @return string
     */
    public function getMatchScorePhoneNo()
    {
        return $this->container['match_score_phone_no'];
    }

    /**
     * Sets match_score_phone_no
     *
     * @param string $match_score_phone_no match_score_phone_no
     *
     * @return $this
     */
    public function setMatchScorePhoneNo($match_score_phone_no)
    {
        $this->container['match_score_phone_no'] = $match_score_phone_no;

        return $this;
    }

    /**
     * Gets match_score_simple_value
     *
     * @return string
     */
    public function getMatchScoreSimpleValue()
    {
        return $this->container['match_score_simple_value'];
    }

    /**
     * Sets match_score_simple_value
     *
     * @param string $match_score_simple_value match_score_simple_value
     *
     * @return $this
     */
    public function setMatchScoreSimpleValue($match_score_simple_value)
    {
        $this->container['match_score_simple_value'] = $match_score_simple_value;

        return $this;
    }

    /**
     * Gets match_score_num
     *
     * @return string
     */
    public function getMatchScoreNum()
    {
        return $this->container['match_score_num'];
    }

    /**
     * Sets match_score_num
     *
     * @param string $match_score_num match_score_num
     *
     * @return $this
     */
    public function setMatchScoreNum($match_score_num)
    {
        $this->container['match_score_num'] = $match_score_num;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
