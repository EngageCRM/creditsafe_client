<?php
/**
 * ConnectIdentityConsumerSearchCriteria
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Creditsafe Connect
 *
 * Creditsafe Connect is a REST API that provides access to the <a href=\"https://www.creditsafe.com/gb/en/more/about/our-data.html\">Creditsafe Global Company Database.</a> This allows you to: <ul><li>Control your master data</li><li>Utilise up-to-date Business and Director information, enhancing your onboarding and qualification processes</li><li>Recieve alerts when your customer's and supplier's Credit Report changes</li></ul> <h2>Quick Start</h2> To start your Creditsafe Connect API integration you will need to have activated your account and set a password by following the instructions in your Welcome Email. If you have not received a Welcome Email please contact your Creditsafe Account Manager.</br></br>By default, you will have been setup on our Sandbox environment.</br></br> Using a REST API client construct an `/authenticate` POST request and enter your username & password (case-sensitive) into the POST body. A successful response will return an  `authentication token`.</br></br> Use the `authentication token` in an `Authorization` header on all other Creditsafe Connect calls as proof of your authenticity.  <h2>Environments</h2>Production Environment baseurl: <code> https://connect.creditsafe.com/v1 </code> </br> Sandbox Test Environment baseurl:  <code>https://connect.sandbox.creditsafe.com/v1</code> <h2>Resources</h2> <ul> <li><a href=\"https://creditsafe.github.io/connect-docs/cs_connectv1-15.html\">OpenAPI</a> specification.</li><li><a href=\"https://www.getpostman.com/collections/4406bbddb81c308db8ff\">Postman Collection</a> of the most common example calls to Creditsafe Connect.</li> <li><a href=\"https://connect-portal.creditsafe.com\"> A Front End Demo Site</a>. Use this as a quick easy way to validate your username & password and form requests.</li> <li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/categories/7000007071/folders/7000018640\"> Help Articles</a>  including: <ul><li>FAQs</li><li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000053487-connect-api-data-dictionaries\"> Data Dictionaries </a></li><li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000054765-connect-api-data-availability-per-country\"> Data Availability per Country </a></li><li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000054656-connect-api-feature-availability-per-country\"> Feature Availability Matrix</a></li></ul></ul>
 *
 * OpenAPI spec version: 1.5.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.34
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ConnectIdentityConsumerSearchCriteria Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ConnectIdentityConsumerSearchCriteria implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Connect.Identity.ConsumerSearchCriteria';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'second_person' => '\Swagger\Client\Model\ConnectIdentityPerson',
'balance_or_limit' => 'int',
'transient' => 'bool',
'credit_type' => 'string',
'term' => 'string',
'reason' => '\Swagger\Client\Model\ConnectIdentityReasonCode',
'third_party_opt_in' => 'bool',
'original_search_ref' => 'string',
'address_link' => 'bool',
'associate_link' => 'bool',
'resolved_picklist' => 'string[]',
'cached_picklist' => 'object',
'is_subsequent' => 'bool'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'second_person' => null,
'balance_or_limit' => 'int32',
'transient' => null,
'credit_type' => null,
'term' => null,
'reason' => null,
'third_party_opt_in' => null,
'original_search_ref' => null,
'address_link' => null,
'associate_link' => null,
'resolved_picklist' => null,
'cached_picklist' => null,
'is_subsequent' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'second_person' => 'secondPerson',
'balance_or_limit' => 'balanceOrLimit',
'transient' => 'transient',
'credit_type' => 'creditType',
'term' => 'term',
'reason' => 'reason',
'third_party_opt_in' => 'thirdPartyOptIn',
'original_search_ref' => 'originalSearchRef',
'address_link' => 'addressLink',
'associate_link' => 'associateLink',
'resolved_picklist' => 'resolvedPicklist',
'cached_picklist' => 'cachedPicklist',
'is_subsequent' => 'isSubsequent'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'second_person' => 'setSecondPerson',
'balance_or_limit' => 'setBalanceOrLimit',
'transient' => 'setTransient',
'credit_type' => 'setCreditType',
'term' => 'setTerm',
'reason' => 'setReason',
'third_party_opt_in' => 'setThirdPartyOptIn',
'original_search_ref' => 'setOriginalSearchRef',
'address_link' => 'setAddressLink',
'associate_link' => 'setAssociateLink',
'resolved_picklist' => 'setResolvedPicklist',
'cached_picklist' => 'setCachedPicklist',
'is_subsequent' => 'setIsSubsequent'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'second_person' => 'getSecondPerson',
'balance_or_limit' => 'getBalanceOrLimit',
'transient' => 'getTransient',
'credit_type' => 'getCreditType',
'term' => 'getTerm',
'reason' => 'getReason',
'third_party_opt_in' => 'getThirdPartyOptIn',
'original_search_ref' => 'getOriginalSearchRef',
'address_link' => 'getAddressLink',
'associate_link' => 'getAssociateLink',
'resolved_picklist' => 'getResolvedPicklist',
'cached_picklist' => 'getCachedPicklist',
'is_subsequent' => 'getIsSubsequent'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['second_person'] = isset($data['second_person']) ? $data['second_person'] : null;
        $this->container['balance_or_limit'] = isset($data['balance_or_limit']) ? $data['balance_or_limit'] : null;
        $this->container['transient'] = isset($data['transient']) ? $data['transient'] : null;
        $this->container['credit_type'] = isset($data['credit_type']) ? $data['credit_type'] : null;
        $this->container['term'] = isset($data['term']) ? $data['term'] : null;
        $this->container['reason'] = isset($data['reason']) ? $data['reason'] : null;
        $this->container['third_party_opt_in'] = isset($data['third_party_opt_in']) ? $data['third_party_opt_in'] : null;
        $this->container['original_search_ref'] = isset($data['original_search_ref']) ? $data['original_search_ref'] : null;
        $this->container['address_link'] = isset($data['address_link']) ? $data['address_link'] : null;
        $this->container['associate_link'] = isset($data['associate_link']) ? $data['associate_link'] : null;
        $this->container['resolved_picklist'] = isset($data['resolved_picklist']) ? $data['resolved_picklist'] : null;
        $this->container['cached_picklist'] = isset($data['cached_picklist']) ? $data['cached_picklist'] : null;
        $this->container['is_subsequent'] = isset($data['is_subsequent']) ? $data['is_subsequent'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets second_person
     *
     * @return \Swagger\Client\Model\ConnectIdentityPerson
     */
    public function getSecondPerson()
    {
        return $this->container['second_person'];
    }

    /**
     * Sets second_person
     *
     * @param \Swagger\Client\Model\ConnectIdentityPerson $second_person second_person
     *
     * @return $this
     */
    public function setSecondPerson($second_person)
    {
        $this->container['second_person'] = $second_person;

        return $this;
    }

    /**
     * Gets balance_or_limit
     *
     * @return int
     */
    public function getBalanceOrLimit()
    {
        return $this->container['balance_or_limit'];
    }

    /**
     * Sets balance_or_limit
     *
     * @param int $balance_or_limit balance_or_limit
     *
     * @return $this
     */
    public function setBalanceOrLimit($balance_or_limit)
    {
        $this->container['balance_or_limit'] = $balance_or_limit;

        return $this;
    }

    /**
     * Gets transient
     *
     * @return bool
     */
    public function getTransient()
    {
        return $this->container['transient'];
    }

    /**
     * Sets transient
     *
     * @param bool $transient transient
     *
     * @return $this
     */
    public function setTransient($transient)
    {
        $this->container['transient'] = $transient;

        return $this;
    }

    /**
     * Gets credit_type
     *
     * @return string
     */
    public function getCreditType()
    {
        return $this->container['credit_type'];
    }

    /**
     * Sets credit_type
     *
     * @param string $credit_type credit_type
     *
     * @return $this
     */
    public function setCreditType($credit_type)
    {
        $this->container['credit_type'] = $credit_type;

        return $this;
    }

    /**
     * Gets term
     *
     * @return string
     */
    public function getTerm()
    {
        return $this->container['term'];
    }

    /**
     * Sets term
     *
     * @param string $term term
     *
     * @return $this
     */
    public function setTerm($term)
    {
        $this->container['term'] = $term;

        return $this;
    }

    /**
     * Gets reason
     *
     * @return \Swagger\Client\Model\ConnectIdentityReasonCode
     */
    public function getReason()
    {
        return $this->container['reason'];
    }

    /**
     * Sets reason
     *
     * @param \Swagger\Client\Model\ConnectIdentityReasonCode $reason reason
     *
     * @return $this
     */
    public function setReason($reason)
    {
        $this->container['reason'] = $reason;

        return $this;
    }

    /**
     * Gets third_party_opt_in
     *
     * @return bool
     */
    public function getThirdPartyOptIn()
    {
        return $this->container['third_party_opt_in'];
    }

    /**
     * Sets third_party_opt_in
     *
     * @param bool $third_party_opt_in third_party_opt_in
     *
     * @return $this
     */
    public function setThirdPartyOptIn($third_party_opt_in)
    {
        $this->container['third_party_opt_in'] = $third_party_opt_in;

        return $this;
    }

    /**
     * Gets original_search_ref
     *
     * @return string
     */
    public function getOriginalSearchRef()
    {
        return $this->container['original_search_ref'];
    }

    /**
     * Sets original_search_ref
     *
     * @param string $original_search_ref original_search_ref
     *
     * @return $this
     */
    public function setOriginalSearchRef($original_search_ref)
    {
        $this->container['original_search_ref'] = $original_search_ref;

        return $this;
    }

    /**
     * Gets address_link
     *
     * @return bool
     */
    public function getAddressLink()
    {
        return $this->container['address_link'];
    }

    /**
     * Sets address_link
     *
     * @param bool $address_link address_link
     *
     * @return $this
     */
    public function setAddressLink($address_link)
    {
        $this->container['address_link'] = $address_link;

        return $this;
    }

    /**
     * Gets associate_link
     *
     * @return bool
     */
    public function getAssociateLink()
    {
        return $this->container['associate_link'];
    }

    /**
     * Sets associate_link
     *
     * @param bool $associate_link associate_link
     *
     * @return $this
     */
    public function setAssociateLink($associate_link)
    {
        $this->container['associate_link'] = $associate_link;

        return $this;
    }

    /**
     * Gets resolved_picklist
     *
     * @return string[]
     */
    public function getResolvedPicklist()
    {
        return $this->container['resolved_picklist'];
    }

    /**
     * Sets resolved_picklist
     *
     * @param string[] $resolved_picklist resolved_picklist
     *
     * @return $this
     */
    public function setResolvedPicklist($resolved_picklist)
    {
        $this->container['resolved_picklist'] = $resolved_picklist;

        return $this;
    }

    /**
     * Gets cached_picklist
     *
     * @return object
     */
    public function getCachedPicklist()
    {
        return $this->container['cached_picklist'];
    }

    /**
     * Sets cached_picklist
     *
     * @param object $cached_picklist cached_picklist
     *
     * @return $this
     */
    public function setCachedPicklist($cached_picklist)
    {
        $this->container['cached_picklist'] = $cached_picklist;

        return $this;
    }

    /**
     * Gets is_subsequent
     *
     * @return bool
     */
    public function getIsSubsequent()
    {
        return $this->container['is_subsequent'];
    }

    /**
     * Sets is_subsequent
     *
     * @param bool $is_subsequent is_subsequent
     *
     * @return $this
     */
    public function setIsSubsequent($is_subsequent)
    {
        $this->container['is_subsequent'] = $is_subsequent;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
