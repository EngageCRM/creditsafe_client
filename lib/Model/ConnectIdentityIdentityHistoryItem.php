<?php
/**
 * ConnectIdentityIdentityHistoryItem
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Creditsafe Connect
 *
 * Creditsafe Connect is a REST API that provides access to the <a href=\"https://www.creditsafe.com/gb/en/more/about/our-data.html\">Creditsafe Global Company Database.</a> This allows you to: <ul><li>Control your master data</li><li>Utilise up-to-date Business and Director information, enhancing your onboarding and qualification processes</li><li>Recieve alerts when your customer's and supplier's Credit Report changes</li></ul> <h2>Quick Start</h2> To start your Creditsafe Connect API integration you will need to have activated your account and set a password by following the instructions in your Welcome Email. If you have not received a Welcome Email please contact your Creditsafe Account Manager.</br></br>By default, you will have been setup on our Sandbox environment.</br></br> Using a REST API client construct an `/authenticate` POST request and enter your username & password (case-sensitive) into the POST body. A successful response will return an  `authentication token`.</br></br> Use the `authentication token` in an `Authorization` header on all other Creditsafe Connect calls as proof of your authenticity.  <h2>Environments</h2>Production Environment baseurl: <code> https://connect.creditsafe.com/v1 </code> </br> Sandbox Test Environment baseurl:  <code>https://connect.sandbox.creditsafe.com/v1</code> <h2>Resources</h2> <ul> <li><a href=\"https://creditsafe.github.io/connect-docs/cs_connectv1-15.html\">OpenAPI</a> specification.</li><li><a href=\"https://www.getpostman.com/collections/4406bbddb81c308db8ff\">Postman Collection</a> of the most common example calls to Creditsafe Connect.</li> <li><a href=\"https://connect-portal.creditsafe.com\"> A Front End Demo Site</a>. Use this as a quick easy way to validate your username & password and form requests.</li> <li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/categories/7000007071/folders/7000018640\"> Help Articles</a>  including: <ul><li>FAQs</li><li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000053487-connect-api-data-dictionaries\"> Data Dictionaries </a></li><li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000054765-connect-api-data-availability-per-country\"> Data Availability per Country </a></li><li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000054656-connect-api-feature-availability-per-country\"> Feature Availability Matrix</a></li></ul></ul>
 *
 * OpenAPI spec version: 1.5.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.34
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ConnectIdentityIdentityHistoryItem Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ConnectIdentityIdentityHistoryItem implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Connect.Identity.IdentityHistoryItem';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'unique_id' => 'string',
'customer_id' => 'int',
'user_id' => 'int',
'search_time' => '\DateTime',
'search_text' => 'string',
'reference' => 'string',
'has_consumer_int' => 'int',
'has_consumer' => 'bool',
'has_id_int' => 'int',
'has_id' => 'bool',
'has_aml_int' => 'int',
'has_aml' => 'bool',
'has_bank_match_int' => 'int',
'has_bank_match' => 'bool',
'has_aml_with_bank_match_int' => 'int',
'has_aml_with_bank_match' => 'bool',
'consumer_id' => 'string',
'consumer_original_id' => 'string',
'consumer_band1' => 'int',
'consumer_score1' => 'int',
'consumer_band2' => 'int',
'consumer_score2' => 'int',
'gauge_version' => 'string',
'consumer_reason' => 'string',
'linked_report' => 'string',
'id_id' => 'string',
'id_authentication_id' => 'string',
'id_chain_id' => 'string',
'id_validation_id' => 'string',
'id_legacy_id' => 'string',
'id_result' => '\Swagger\Client\Model\ConnectIdentityAmlResultCode',
'id_has_alerts_int' => 'int',
'id_has_alerts' => 'bool',
'aml_type' => '\Swagger\Client\Model\ConnectIdentityProduct',
'aml_id' => 'string',
'aml_authentication_id' => 'string',
'aml_chain_id' => 'string',
'aml_validation_id' => 'string',
'aml_legacy_id' => 'string',
'aml_result' => '\Swagger\Client\Model\ConnectIdentityAmlResultCode',
'aml_has_alerts_int' => 'int',
'aml_has_alerts' => 'bool',
'id_revalidated_int' => 'int',
'id_has_revalidated' => 'bool',
'id_can_revalidate' => 'bool',
'aml_revalidated_int' => 'int',
'aml_has_revalidated' => 'bool',
'aml_can_revalidate' => 'bool',
'input' => '\Swagger\Client\Model\ConnectIdentitySearchRequest',
'consumer' => '\Swagger\Client\Model\ConnectIdentityTransUnionResult',
'id' => '\Swagger\Client\Model\ConnectIdentityIdAmlResult',
'aml' => '\Swagger\Client\Model\ConnectIdentityIdAmlResult'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'unique_id' => null,
'customer_id' => 'int64',
'user_id' => 'int64',
'search_time' => 'date-time',
'search_text' => null,
'reference' => null,
'has_consumer_int' => 'int32',
'has_consumer' => null,
'has_id_int' => 'int32',
'has_id' => null,
'has_aml_int' => 'int32',
'has_aml' => null,
'has_bank_match_int' => 'int32',
'has_bank_match' => null,
'has_aml_with_bank_match_int' => 'int32',
'has_aml_with_bank_match' => null,
'consumer_id' => null,
'consumer_original_id' => null,
'consumer_band1' => 'int32',
'consumer_score1' => 'int32',
'consumer_band2' => 'int32',
'consumer_score2' => 'int32',
'gauge_version' => null,
'consumer_reason' => null,
'linked_report' => null,
'id_id' => null,
'id_authentication_id' => null,
'id_chain_id' => null,
'id_validation_id' => null,
'id_legacy_id' => null,
'id_result' => null,
'id_has_alerts_int' => 'int32',
'id_has_alerts' => null,
'aml_type' => null,
'aml_id' => null,
'aml_authentication_id' => null,
'aml_chain_id' => null,
'aml_validation_id' => null,
'aml_legacy_id' => null,
'aml_result' => null,
'aml_has_alerts_int' => 'int32',
'aml_has_alerts' => null,
'id_revalidated_int' => 'int32',
'id_has_revalidated' => null,
'id_can_revalidate' => null,
'aml_revalidated_int' => 'int32',
'aml_has_revalidated' => null,
'aml_can_revalidate' => null,
'input' => null,
'consumer' => null,
'id' => null,
'aml' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'unique_id' => 'uniqueId',
'customer_id' => 'customerId',
'user_id' => 'userId',
'search_time' => 'searchTime',
'search_text' => 'searchText',
'reference' => 'reference',
'has_consumer_int' => 'hasConsumerInt',
'has_consumer' => 'hasConsumer',
'has_id_int' => 'hasIdInt',
'has_id' => 'hasId',
'has_aml_int' => 'hasAmlInt',
'has_aml' => 'hasAml',
'has_bank_match_int' => 'hasBankMatchInt',
'has_bank_match' => 'hasBankMatch',
'has_aml_with_bank_match_int' => 'hasAmlWithBankMatchInt',
'has_aml_with_bank_match' => 'hasAmlWithBankMatch',
'consumer_id' => 'consumerId',
'consumer_original_id' => 'consumerOriginalId',
'consumer_band1' => 'consumerBand1',
'consumer_score1' => 'consumerScore1',
'consumer_band2' => 'consumerBand2',
'consumer_score2' => 'consumerScore2',
'gauge_version' => 'gaugeVersion',
'consumer_reason' => 'consumerReason',
'linked_report' => 'linkedReport',
'id_id' => 'idId',
'id_authentication_id' => 'idAuthenticationId',
'id_chain_id' => 'idChainId',
'id_validation_id' => 'idValidationId',
'id_legacy_id' => 'idLegacyID',
'id_result' => 'idResult',
'id_has_alerts_int' => 'idHasAlertsInt',
'id_has_alerts' => 'idHasAlerts',
'aml_type' => 'amlType',
'aml_id' => 'amlId',
'aml_authentication_id' => 'amlAuthenticationId',
'aml_chain_id' => 'amlChainId',
'aml_validation_id' => 'amlValidationId',
'aml_legacy_id' => 'amlLegacyID',
'aml_result' => 'amlResult',
'aml_has_alerts_int' => 'amlHasAlertsInt',
'aml_has_alerts' => 'amlHasAlerts',
'id_revalidated_int' => 'idRevalidatedInt',
'id_has_revalidated' => 'idHasRevalidated',
'id_can_revalidate' => 'idCanRevalidate',
'aml_revalidated_int' => 'amlRevalidatedInt',
'aml_has_revalidated' => 'amlHasRevalidated',
'aml_can_revalidate' => 'amlCanRevalidate',
'input' => 'input',
'consumer' => 'consumer',
'id' => 'id',
'aml' => 'aml'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'unique_id' => 'setUniqueId',
'customer_id' => 'setCustomerId',
'user_id' => 'setUserId',
'search_time' => 'setSearchTime',
'search_text' => 'setSearchText',
'reference' => 'setReference',
'has_consumer_int' => 'setHasConsumerInt',
'has_consumer' => 'setHasConsumer',
'has_id_int' => 'setHasIdInt',
'has_id' => 'setHasId',
'has_aml_int' => 'setHasAmlInt',
'has_aml' => 'setHasAml',
'has_bank_match_int' => 'setHasBankMatchInt',
'has_bank_match' => 'setHasBankMatch',
'has_aml_with_bank_match_int' => 'setHasAmlWithBankMatchInt',
'has_aml_with_bank_match' => 'setHasAmlWithBankMatch',
'consumer_id' => 'setConsumerId',
'consumer_original_id' => 'setConsumerOriginalId',
'consumer_band1' => 'setConsumerBand1',
'consumer_score1' => 'setConsumerScore1',
'consumer_band2' => 'setConsumerBand2',
'consumer_score2' => 'setConsumerScore2',
'gauge_version' => 'setGaugeVersion',
'consumer_reason' => 'setConsumerReason',
'linked_report' => 'setLinkedReport',
'id_id' => 'setIdId',
'id_authentication_id' => 'setIdAuthenticationId',
'id_chain_id' => 'setIdChainId',
'id_validation_id' => 'setIdValidationId',
'id_legacy_id' => 'setIdLegacyId',
'id_result' => 'setIdResult',
'id_has_alerts_int' => 'setIdHasAlertsInt',
'id_has_alerts' => 'setIdHasAlerts',
'aml_type' => 'setAmlType',
'aml_id' => 'setAmlId',
'aml_authentication_id' => 'setAmlAuthenticationId',
'aml_chain_id' => 'setAmlChainId',
'aml_validation_id' => 'setAmlValidationId',
'aml_legacy_id' => 'setAmlLegacyId',
'aml_result' => 'setAmlResult',
'aml_has_alerts_int' => 'setAmlHasAlertsInt',
'aml_has_alerts' => 'setAmlHasAlerts',
'id_revalidated_int' => 'setIdRevalidatedInt',
'id_has_revalidated' => 'setIdHasRevalidated',
'id_can_revalidate' => 'setIdCanRevalidate',
'aml_revalidated_int' => 'setAmlRevalidatedInt',
'aml_has_revalidated' => 'setAmlHasRevalidated',
'aml_can_revalidate' => 'setAmlCanRevalidate',
'input' => 'setInput',
'consumer' => 'setConsumer',
'id' => 'setId',
'aml' => 'setAml'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'unique_id' => 'getUniqueId',
'customer_id' => 'getCustomerId',
'user_id' => 'getUserId',
'search_time' => 'getSearchTime',
'search_text' => 'getSearchText',
'reference' => 'getReference',
'has_consumer_int' => 'getHasConsumerInt',
'has_consumer' => 'getHasConsumer',
'has_id_int' => 'getHasIdInt',
'has_id' => 'getHasId',
'has_aml_int' => 'getHasAmlInt',
'has_aml' => 'getHasAml',
'has_bank_match_int' => 'getHasBankMatchInt',
'has_bank_match' => 'getHasBankMatch',
'has_aml_with_bank_match_int' => 'getHasAmlWithBankMatchInt',
'has_aml_with_bank_match' => 'getHasAmlWithBankMatch',
'consumer_id' => 'getConsumerId',
'consumer_original_id' => 'getConsumerOriginalId',
'consumer_band1' => 'getConsumerBand1',
'consumer_score1' => 'getConsumerScore1',
'consumer_band2' => 'getConsumerBand2',
'consumer_score2' => 'getConsumerScore2',
'gauge_version' => 'getGaugeVersion',
'consumer_reason' => 'getConsumerReason',
'linked_report' => 'getLinkedReport',
'id_id' => 'getIdId',
'id_authentication_id' => 'getIdAuthenticationId',
'id_chain_id' => 'getIdChainId',
'id_validation_id' => 'getIdValidationId',
'id_legacy_id' => 'getIdLegacyId',
'id_result' => 'getIdResult',
'id_has_alerts_int' => 'getIdHasAlertsInt',
'id_has_alerts' => 'getIdHasAlerts',
'aml_type' => 'getAmlType',
'aml_id' => 'getAmlId',
'aml_authentication_id' => 'getAmlAuthenticationId',
'aml_chain_id' => 'getAmlChainId',
'aml_validation_id' => 'getAmlValidationId',
'aml_legacy_id' => 'getAmlLegacyId',
'aml_result' => 'getAmlResult',
'aml_has_alerts_int' => 'getAmlHasAlertsInt',
'aml_has_alerts' => 'getAmlHasAlerts',
'id_revalidated_int' => 'getIdRevalidatedInt',
'id_has_revalidated' => 'getIdHasRevalidated',
'id_can_revalidate' => 'getIdCanRevalidate',
'aml_revalidated_int' => 'getAmlRevalidatedInt',
'aml_has_revalidated' => 'getAmlHasRevalidated',
'aml_can_revalidate' => 'getAmlCanRevalidate',
'input' => 'getInput',
'consumer' => 'getConsumer',
'id' => 'getId',
'aml' => 'getAml'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['unique_id'] = isset($data['unique_id']) ? $data['unique_id'] : null;
        $this->container['customer_id'] = isset($data['customer_id']) ? $data['customer_id'] : null;
        $this->container['user_id'] = isset($data['user_id']) ? $data['user_id'] : null;
        $this->container['search_time'] = isset($data['search_time']) ? $data['search_time'] : null;
        $this->container['search_text'] = isset($data['search_text']) ? $data['search_text'] : null;
        $this->container['reference'] = isset($data['reference']) ? $data['reference'] : null;
        $this->container['has_consumer_int'] = isset($data['has_consumer_int']) ? $data['has_consumer_int'] : null;
        $this->container['has_consumer'] = isset($data['has_consumer']) ? $data['has_consumer'] : null;
        $this->container['has_id_int'] = isset($data['has_id_int']) ? $data['has_id_int'] : null;
        $this->container['has_id'] = isset($data['has_id']) ? $data['has_id'] : null;
        $this->container['has_aml_int'] = isset($data['has_aml_int']) ? $data['has_aml_int'] : null;
        $this->container['has_aml'] = isset($data['has_aml']) ? $data['has_aml'] : null;
        $this->container['has_bank_match_int'] = isset($data['has_bank_match_int']) ? $data['has_bank_match_int'] : null;
        $this->container['has_bank_match'] = isset($data['has_bank_match']) ? $data['has_bank_match'] : null;
        $this->container['has_aml_with_bank_match_int'] = isset($data['has_aml_with_bank_match_int']) ? $data['has_aml_with_bank_match_int'] : null;
        $this->container['has_aml_with_bank_match'] = isset($data['has_aml_with_bank_match']) ? $data['has_aml_with_bank_match'] : null;
        $this->container['consumer_id'] = isset($data['consumer_id']) ? $data['consumer_id'] : null;
        $this->container['consumer_original_id'] = isset($data['consumer_original_id']) ? $data['consumer_original_id'] : null;
        $this->container['consumer_band1'] = isset($data['consumer_band1']) ? $data['consumer_band1'] : null;
        $this->container['consumer_score1'] = isset($data['consumer_score1']) ? $data['consumer_score1'] : null;
        $this->container['consumer_band2'] = isset($data['consumer_band2']) ? $data['consumer_band2'] : null;
        $this->container['consumer_score2'] = isset($data['consumer_score2']) ? $data['consumer_score2'] : null;
        $this->container['gauge_version'] = isset($data['gauge_version']) ? $data['gauge_version'] : null;
        $this->container['consumer_reason'] = isset($data['consumer_reason']) ? $data['consumer_reason'] : null;
        $this->container['linked_report'] = isset($data['linked_report']) ? $data['linked_report'] : null;
        $this->container['id_id'] = isset($data['id_id']) ? $data['id_id'] : null;
        $this->container['id_authentication_id'] = isset($data['id_authentication_id']) ? $data['id_authentication_id'] : null;
        $this->container['id_chain_id'] = isset($data['id_chain_id']) ? $data['id_chain_id'] : null;
        $this->container['id_validation_id'] = isset($data['id_validation_id']) ? $data['id_validation_id'] : null;
        $this->container['id_legacy_id'] = isset($data['id_legacy_id']) ? $data['id_legacy_id'] : null;
        $this->container['id_result'] = isset($data['id_result']) ? $data['id_result'] : null;
        $this->container['id_has_alerts_int'] = isset($data['id_has_alerts_int']) ? $data['id_has_alerts_int'] : null;
        $this->container['id_has_alerts'] = isset($data['id_has_alerts']) ? $data['id_has_alerts'] : null;
        $this->container['aml_type'] = isset($data['aml_type']) ? $data['aml_type'] : null;
        $this->container['aml_id'] = isset($data['aml_id']) ? $data['aml_id'] : null;
        $this->container['aml_authentication_id'] = isset($data['aml_authentication_id']) ? $data['aml_authentication_id'] : null;
        $this->container['aml_chain_id'] = isset($data['aml_chain_id']) ? $data['aml_chain_id'] : null;
        $this->container['aml_validation_id'] = isset($data['aml_validation_id']) ? $data['aml_validation_id'] : null;
        $this->container['aml_legacy_id'] = isset($data['aml_legacy_id']) ? $data['aml_legacy_id'] : null;
        $this->container['aml_result'] = isset($data['aml_result']) ? $data['aml_result'] : null;
        $this->container['aml_has_alerts_int'] = isset($data['aml_has_alerts_int']) ? $data['aml_has_alerts_int'] : null;
        $this->container['aml_has_alerts'] = isset($data['aml_has_alerts']) ? $data['aml_has_alerts'] : null;
        $this->container['id_revalidated_int'] = isset($data['id_revalidated_int']) ? $data['id_revalidated_int'] : null;
        $this->container['id_has_revalidated'] = isset($data['id_has_revalidated']) ? $data['id_has_revalidated'] : null;
        $this->container['id_can_revalidate'] = isset($data['id_can_revalidate']) ? $data['id_can_revalidate'] : null;
        $this->container['aml_revalidated_int'] = isset($data['aml_revalidated_int']) ? $data['aml_revalidated_int'] : null;
        $this->container['aml_has_revalidated'] = isset($data['aml_has_revalidated']) ? $data['aml_has_revalidated'] : null;
        $this->container['aml_can_revalidate'] = isset($data['aml_can_revalidate']) ? $data['aml_can_revalidate'] : null;
        $this->container['input'] = isset($data['input']) ? $data['input'] : null;
        $this->container['consumer'] = isset($data['consumer']) ? $data['consumer'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['aml'] = isset($data['aml']) ? $data['aml'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets unique_id
     *
     * @return string
     */
    public function getUniqueId()
    {
        return $this->container['unique_id'];
    }

    /**
     * Sets unique_id
     *
     * @param string $unique_id unique_id
     *
     * @return $this
     */
    public function setUniqueId($unique_id)
    {
        $this->container['unique_id'] = $unique_id;

        return $this;
    }

    /**
     * Gets customer_id
     *
     * @return int
     */
    public function getCustomerId()
    {
        return $this->container['customer_id'];
    }

    /**
     * Sets customer_id
     *
     * @param int $customer_id customer_id
     *
     * @return $this
     */
    public function setCustomerId($customer_id)
    {
        $this->container['customer_id'] = $customer_id;

        return $this;
    }

    /**
     * Gets user_id
     *
     * @return int
     */
    public function getUserId()
    {
        return $this->container['user_id'];
    }

    /**
     * Sets user_id
     *
     * @param int $user_id user_id
     *
     * @return $this
     */
    public function setUserId($user_id)
    {
        $this->container['user_id'] = $user_id;

        return $this;
    }

    /**
     * Gets search_time
     *
     * @return \DateTime
     */
    public function getSearchTime()
    {
        return $this->container['search_time'];
    }

    /**
     * Sets search_time
     *
     * @param \DateTime $search_time search_time
     *
     * @return $this
     */
    public function setSearchTime($search_time)
    {
        $this->container['search_time'] = $search_time;

        return $this;
    }

    /**
     * Gets search_text
     *
     * @return string
     */
    public function getSearchText()
    {
        return $this->container['search_text'];
    }

    /**
     * Sets search_text
     *
     * @param string $search_text search_text
     *
     * @return $this
     */
    public function setSearchText($search_text)
    {
        $this->container['search_text'] = $search_text;

        return $this;
    }

    /**
     * Gets reference
     *
     * @return string
     */
    public function getReference()
    {
        return $this->container['reference'];
    }

    /**
     * Sets reference
     *
     * @param string $reference reference
     *
     * @return $this
     */
    public function setReference($reference)
    {
        $this->container['reference'] = $reference;

        return $this;
    }

    /**
     * Gets has_consumer_int
     *
     * @return int
     */
    public function getHasConsumerInt()
    {
        return $this->container['has_consumer_int'];
    }

    /**
     * Sets has_consumer_int
     *
     * @param int $has_consumer_int has_consumer_int
     *
     * @return $this
     */
    public function setHasConsumerInt($has_consumer_int)
    {
        $this->container['has_consumer_int'] = $has_consumer_int;

        return $this;
    }

    /**
     * Gets has_consumer
     *
     * @return bool
     */
    public function getHasConsumer()
    {
        return $this->container['has_consumer'];
    }

    /**
     * Sets has_consumer
     *
     * @param bool $has_consumer has_consumer
     *
     * @return $this
     */
    public function setHasConsumer($has_consumer)
    {
        $this->container['has_consumer'] = $has_consumer;

        return $this;
    }

    /**
     * Gets has_id_int
     *
     * @return int
     */
    public function getHasIdInt()
    {
        return $this->container['has_id_int'];
    }

    /**
     * Sets has_id_int
     *
     * @param int $has_id_int has_id_int
     *
     * @return $this
     */
    public function setHasIdInt($has_id_int)
    {
        $this->container['has_id_int'] = $has_id_int;

        return $this;
    }

    /**
     * Gets has_id
     *
     * @return bool
     */
    public function getHasId()
    {
        return $this->container['has_id'];
    }

    /**
     * Sets has_id
     *
     * @param bool $has_id has_id
     *
     * @return $this
     */
    public function setHasId($has_id)
    {
        $this->container['has_id'] = $has_id;

        return $this;
    }

    /**
     * Gets has_aml_int
     *
     * @return int
     */
    public function getHasAmlInt()
    {
        return $this->container['has_aml_int'];
    }

    /**
     * Sets has_aml_int
     *
     * @param int $has_aml_int has_aml_int
     *
     * @return $this
     */
    public function setHasAmlInt($has_aml_int)
    {
        $this->container['has_aml_int'] = $has_aml_int;

        return $this;
    }

    /**
     * Gets has_aml
     *
     * @return bool
     */
    public function getHasAml()
    {
        return $this->container['has_aml'];
    }

    /**
     * Sets has_aml
     *
     * @param bool $has_aml has_aml
     *
     * @return $this
     */
    public function setHasAml($has_aml)
    {
        $this->container['has_aml'] = $has_aml;

        return $this;
    }

    /**
     * Gets has_bank_match_int
     *
     * @return int
     */
    public function getHasBankMatchInt()
    {
        return $this->container['has_bank_match_int'];
    }

    /**
     * Sets has_bank_match_int
     *
     * @param int $has_bank_match_int has_bank_match_int
     *
     * @return $this
     */
    public function setHasBankMatchInt($has_bank_match_int)
    {
        $this->container['has_bank_match_int'] = $has_bank_match_int;

        return $this;
    }

    /**
     * Gets has_bank_match
     *
     * @return bool
     */
    public function getHasBankMatch()
    {
        return $this->container['has_bank_match'];
    }

    /**
     * Sets has_bank_match
     *
     * @param bool $has_bank_match has_bank_match
     *
     * @return $this
     */
    public function setHasBankMatch($has_bank_match)
    {
        $this->container['has_bank_match'] = $has_bank_match;

        return $this;
    }

    /**
     * Gets has_aml_with_bank_match_int
     *
     * @return int
     */
    public function getHasAmlWithBankMatchInt()
    {
        return $this->container['has_aml_with_bank_match_int'];
    }

    /**
     * Sets has_aml_with_bank_match_int
     *
     * @param int $has_aml_with_bank_match_int has_aml_with_bank_match_int
     *
     * @return $this
     */
    public function setHasAmlWithBankMatchInt($has_aml_with_bank_match_int)
    {
        $this->container['has_aml_with_bank_match_int'] = $has_aml_with_bank_match_int;

        return $this;
    }

    /**
     * Gets has_aml_with_bank_match
     *
     * @return bool
     */
    public function getHasAmlWithBankMatch()
    {
        return $this->container['has_aml_with_bank_match'];
    }

    /**
     * Sets has_aml_with_bank_match
     *
     * @param bool $has_aml_with_bank_match has_aml_with_bank_match
     *
     * @return $this
     */
    public function setHasAmlWithBankMatch($has_aml_with_bank_match)
    {
        $this->container['has_aml_with_bank_match'] = $has_aml_with_bank_match;

        return $this;
    }

    /**
     * Gets consumer_id
     *
     * @return string
     */
    public function getConsumerId()
    {
        return $this->container['consumer_id'];
    }

    /**
     * Sets consumer_id
     *
     * @param string $consumer_id consumer_id
     *
     * @return $this
     */
    public function setConsumerId($consumer_id)
    {
        $this->container['consumer_id'] = $consumer_id;

        return $this;
    }

    /**
     * Gets consumer_original_id
     *
     * @return string
     */
    public function getConsumerOriginalId()
    {
        return $this->container['consumer_original_id'];
    }

    /**
     * Sets consumer_original_id
     *
     * @param string $consumer_original_id consumer_original_id
     *
     * @return $this
     */
    public function setConsumerOriginalId($consumer_original_id)
    {
        $this->container['consumer_original_id'] = $consumer_original_id;

        return $this;
    }

    /**
     * Gets consumer_band1
     *
     * @return int
     */
    public function getConsumerBand1()
    {
        return $this->container['consumer_band1'];
    }

    /**
     * Sets consumer_band1
     *
     * @param int $consumer_band1 consumer_band1
     *
     * @return $this
     */
    public function setConsumerBand1($consumer_band1)
    {
        $this->container['consumer_band1'] = $consumer_band1;

        return $this;
    }

    /**
     * Gets consumer_score1
     *
     * @return int
     */
    public function getConsumerScore1()
    {
        return $this->container['consumer_score1'];
    }

    /**
     * Sets consumer_score1
     *
     * @param int $consumer_score1 consumer_score1
     *
     * @return $this
     */
    public function setConsumerScore1($consumer_score1)
    {
        $this->container['consumer_score1'] = $consumer_score1;

        return $this;
    }

    /**
     * Gets consumer_band2
     *
     * @return int
     */
    public function getConsumerBand2()
    {
        return $this->container['consumer_band2'];
    }

    /**
     * Sets consumer_band2
     *
     * @param int $consumer_band2 consumer_band2
     *
     * @return $this
     */
    public function setConsumerBand2($consumer_band2)
    {
        $this->container['consumer_band2'] = $consumer_band2;

        return $this;
    }

    /**
     * Gets consumer_score2
     *
     * @return int
     */
    public function getConsumerScore2()
    {
        return $this->container['consumer_score2'];
    }

    /**
     * Sets consumer_score2
     *
     * @param int $consumer_score2 consumer_score2
     *
     * @return $this
     */
    public function setConsumerScore2($consumer_score2)
    {
        $this->container['consumer_score2'] = $consumer_score2;

        return $this;
    }

    /**
     * Gets gauge_version
     *
     * @return string
     */
    public function getGaugeVersion()
    {
        return $this->container['gauge_version'];
    }

    /**
     * Sets gauge_version
     *
     * @param string $gauge_version gauge_version
     *
     * @return $this
     */
    public function setGaugeVersion($gauge_version)
    {
        $this->container['gauge_version'] = $gauge_version;

        return $this;
    }

    /**
     * Gets consumer_reason
     *
     * @return string
     */
    public function getConsumerReason()
    {
        return $this->container['consumer_reason'];
    }

    /**
     * Sets consumer_reason
     *
     * @param string $consumer_reason consumer_reason
     *
     * @return $this
     */
    public function setConsumerReason($consumer_reason)
    {
        $this->container['consumer_reason'] = $consumer_reason;

        return $this;
    }

    /**
     * Gets linked_report
     *
     * @return string
     */
    public function getLinkedReport()
    {
        return $this->container['linked_report'];
    }

    /**
     * Sets linked_report
     *
     * @param string $linked_report linked_report
     *
     * @return $this
     */
    public function setLinkedReport($linked_report)
    {
        $this->container['linked_report'] = $linked_report;

        return $this;
    }

    /**
     * Gets id_id
     *
     * @return string
     */
    public function getIdId()
    {
        return $this->container['id_id'];
    }

    /**
     * Sets id_id
     *
     * @param string $id_id id_id
     *
     * @return $this
     */
    public function setIdId($id_id)
    {
        $this->container['id_id'] = $id_id;

        return $this;
    }

    /**
     * Gets id_authentication_id
     *
     * @return string
     */
    public function getIdAuthenticationId()
    {
        return $this->container['id_authentication_id'];
    }

    /**
     * Sets id_authentication_id
     *
     * @param string $id_authentication_id id_authentication_id
     *
     * @return $this
     */
    public function setIdAuthenticationId($id_authentication_id)
    {
        $this->container['id_authentication_id'] = $id_authentication_id;

        return $this;
    }

    /**
     * Gets id_chain_id
     *
     * @return string
     */
    public function getIdChainId()
    {
        return $this->container['id_chain_id'];
    }

    /**
     * Sets id_chain_id
     *
     * @param string $id_chain_id id_chain_id
     *
     * @return $this
     */
    public function setIdChainId($id_chain_id)
    {
        $this->container['id_chain_id'] = $id_chain_id;

        return $this;
    }

    /**
     * Gets id_validation_id
     *
     * @return string
     */
    public function getIdValidationId()
    {
        return $this->container['id_validation_id'];
    }

    /**
     * Sets id_validation_id
     *
     * @param string $id_validation_id id_validation_id
     *
     * @return $this
     */
    public function setIdValidationId($id_validation_id)
    {
        $this->container['id_validation_id'] = $id_validation_id;

        return $this;
    }

    /**
     * Gets id_legacy_id
     *
     * @return string
     */
    public function getIdLegacyId()
    {
        return $this->container['id_legacy_id'];
    }

    /**
     * Sets id_legacy_id
     *
     * @param string $id_legacy_id id_legacy_id
     *
     * @return $this
     */
    public function setIdLegacyId($id_legacy_id)
    {
        $this->container['id_legacy_id'] = $id_legacy_id;

        return $this;
    }

    /**
     * Gets id_result
     *
     * @return \Swagger\Client\Model\ConnectIdentityAmlResultCode
     */
    public function getIdResult()
    {
        return $this->container['id_result'];
    }

    /**
     * Sets id_result
     *
     * @param \Swagger\Client\Model\ConnectIdentityAmlResultCode $id_result id_result
     *
     * @return $this
     */
    public function setIdResult($id_result)
    {
        $this->container['id_result'] = $id_result;

        return $this;
    }

    /**
     * Gets id_has_alerts_int
     *
     * @return int
     */
    public function getIdHasAlertsInt()
    {
        return $this->container['id_has_alerts_int'];
    }

    /**
     * Sets id_has_alerts_int
     *
     * @param int $id_has_alerts_int id_has_alerts_int
     *
     * @return $this
     */
    public function setIdHasAlertsInt($id_has_alerts_int)
    {
        $this->container['id_has_alerts_int'] = $id_has_alerts_int;

        return $this;
    }

    /**
     * Gets id_has_alerts
     *
     * @return bool
     */
    public function getIdHasAlerts()
    {
        return $this->container['id_has_alerts'];
    }

    /**
     * Sets id_has_alerts
     *
     * @param bool $id_has_alerts id_has_alerts
     *
     * @return $this
     */
    public function setIdHasAlerts($id_has_alerts)
    {
        $this->container['id_has_alerts'] = $id_has_alerts;

        return $this;
    }

    /**
     * Gets aml_type
     *
     * @return \Swagger\Client\Model\ConnectIdentityProduct
     */
    public function getAmlType()
    {
        return $this->container['aml_type'];
    }

    /**
     * Sets aml_type
     *
     * @param \Swagger\Client\Model\ConnectIdentityProduct $aml_type aml_type
     *
     * @return $this
     */
    public function setAmlType($aml_type)
    {
        $this->container['aml_type'] = $aml_type;

        return $this;
    }

    /**
     * Gets aml_id
     *
     * @return string
     */
    public function getAmlId()
    {
        return $this->container['aml_id'];
    }

    /**
     * Sets aml_id
     *
     * @param string $aml_id aml_id
     *
     * @return $this
     */
    public function setAmlId($aml_id)
    {
        $this->container['aml_id'] = $aml_id;

        return $this;
    }

    /**
     * Gets aml_authentication_id
     *
     * @return string
     */
    public function getAmlAuthenticationId()
    {
        return $this->container['aml_authentication_id'];
    }

    /**
     * Sets aml_authentication_id
     *
     * @param string $aml_authentication_id aml_authentication_id
     *
     * @return $this
     */
    public function setAmlAuthenticationId($aml_authentication_id)
    {
        $this->container['aml_authentication_id'] = $aml_authentication_id;

        return $this;
    }

    /**
     * Gets aml_chain_id
     *
     * @return string
     */
    public function getAmlChainId()
    {
        return $this->container['aml_chain_id'];
    }

    /**
     * Sets aml_chain_id
     *
     * @param string $aml_chain_id aml_chain_id
     *
     * @return $this
     */
    public function setAmlChainId($aml_chain_id)
    {
        $this->container['aml_chain_id'] = $aml_chain_id;

        return $this;
    }

    /**
     * Gets aml_validation_id
     *
     * @return string
     */
    public function getAmlValidationId()
    {
        return $this->container['aml_validation_id'];
    }

    /**
     * Sets aml_validation_id
     *
     * @param string $aml_validation_id aml_validation_id
     *
     * @return $this
     */
    public function setAmlValidationId($aml_validation_id)
    {
        $this->container['aml_validation_id'] = $aml_validation_id;

        return $this;
    }

    /**
     * Gets aml_legacy_id
     *
     * @return string
     */
    public function getAmlLegacyId()
    {
        return $this->container['aml_legacy_id'];
    }

    /**
     * Sets aml_legacy_id
     *
     * @param string $aml_legacy_id aml_legacy_id
     *
     * @return $this
     */
    public function setAmlLegacyId($aml_legacy_id)
    {
        $this->container['aml_legacy_id'] = $aml_legacy_id;

        return $this;
    }

    /**
     * Gets aml_result
     *
     * @return \Swagger\Client\Model\ConnectIdentityAmlResultCode
     */
    public function getAmlResult()
    {
        return $this->container['aml_result'];
    }

    /**
     * Sets aml_result
     *
     * @param \Swagger\Client\Model\ConnectIdentityAmlResultCode $aml_result aml_result
     *
     * @return $this
     */
    public function setAmlResult($aml_result)
    {
        $this->container['aml_result'] = $aml_result;

        return $this;
    }

    /**
     * Gets aml_has_alerts_int
     *
     * @return int
     */
    public function getAmlHasAlertsInt()
    {
        return $this->container['aml_has_alerts_int'];
    }

    /**
     * Sets aml_has_alerts_int
     *
     * @param int $aml_has_alerts_int aml_has_alerts_int
     *
     * @return $this
     */
    public function setAmlHasAlertsInt($aml_has_alerts_int)
    {
        $this->container['aml_has_alerts_int'] = $aml_has_alerts_int;

        return $this;
    }

    /**
     * Gets aml_has_alerts
     *
     * @return bool
     */
    public function getAmlHasAlerts()
    {
        return $this->container['aml_has_alerts'];
    }

    /**
     * Sets aml_has_alerts
     *
     * @param bool $aml_has_alerts aml_has_alerts
     *
     * @return $this
     */
    public function setAmlHasAlerts($aml_has_alerts)
    {
        $this->container['aml_has_alerts'] = $aml_has_alerts;

        return $this;
    }

    /**
     * Gets id_revalidated_int
     *
     * @return int
     */
    public function getIdRevalidatedInt()
    {
        return $this->container['id_revalidated_int'];
    }

    /**
     * Sets id_revalidated_int
     *
     * @param int $id_revalidated_int id_revalidated_int
     *
     * @return $this
     */
    public function setIdRevalidatedInt($id_revalidated_int)
    {
        $this->container['id_revalidated_int'] = $id_revalidated_int;

        return $this;
    }

    /**
     * Gets id_has_revalidated
     *
     * @return bool
     */
    public function getIdHasRevalidated()
    {
        return $this->container['id_has_revalidated'];
    }

    /**
     * Sets id_has_revalidated
     *
     * @param bool $id_has_revalidated id_has_revalidated
     *
     * @return $this
     */
    public function setIdHasRevalidated($id_has_revalidated)
    {
        $this->container['id_has_revalidated'] = $id_has_revalidated;

        return $this;
    }

    /**
     * Gets id_can_revalidate
     *
     * @return bool
     */
    public function getIdCanRevalidate()
    {
        return $this->container['id_can_revalidate'];
    }

    /**
     * Sets id_can_revalidate
     *
     * @param bool $id_can_revalidate id_can_revalidate
     *
     * @return $this
     */
    public function setIdCanRevalidate($id_can_revalidate)
    {
        $this->container['id_can_revalidate'] = $id_can_revalidate;

        return $this;
    }

    /**
     * Gets aml_revalidated_int
     *
     * @return int
     */
    public function getAmlRevalidatedInt()
    {
        return $this->container['aml_revalidated_int'];
    }

    /**
     * Sets aml_revalidated_int
     *
     * @param int $aml_revalidated_int aml_revalidated_int
     *
     * @return $this
     */
    public function setAmlRevalidatedInt($aml_revalidated_int)
    {
        $this->container['aml_revalidated_int'] = $aml_revalidated_int;

        return $this;
    }

    /**
     * Gets aml_has_revalidated
     *
     * @return bool
     */
    public function getAmlHasRevalidated()
    {
        return $this->container['aml_has_revalidated'];
    }

    /**
     * Sets aml_has_revalidated
     *
     * @param bool $aml_has_revalidated aml_has_revalidated
     *
     * @return $this
     */
    public function setAmlHasRevalidated($aml_has_revalidated)
    {
        $this->container['aml_has_revalidated'] = $aml_has_revalidated;

        return $this;
    }

    /**
     * Gets aml_can_revalidate
     *
     * @return bool
     */
    public function getAmlCanRevalidate()
    {
        return $this->container['aml_can_revalidate'];
    }

    /**
     * Sets aml_can_revalidate
     *
     * @param bool $aml_can_revalidate aml_can_revalidate
     *
     * @return $this
     */
    public function setAmlCanRevalidate($aml_can_revalidate)
    {
        $this->container['aml_can_revalidate'] = $aml_can_revalidate;

        return $this;
    }

    /**
     * Gets input
     *
     * @return \Swagger\Client\Model\ConnectIdentitySearchRequest
     */
    public function getInput()
    {
        return $this->container['input'];
    }

    /**
     * Sets input
     *
     * @param \Swagger\Client\Model\ConnectIdentitySearchRequest $input input
     *
     * @return $this
     */
    public function setInput($input)
    {
        $this->container['input'] = $input;

        return $this;
    }

    /**
     * Gets consumer
     *
     * @return \Swagger\Client\Model\ConnectIdentityTransUnionResult
     */
    public function getConsumer()
    {
        return $this->container['consumer'];
    }

    /**
     * Sets consumer
     *
     * @param \Swagger\Client\Model\ConnectIdentityTransUnionResult $consumer consumer
     *
     * @return $this
     */
    public function setConsumer($consumer)
    {
        $this->container['consumer'] = $consumer;

        return $this;
    }

    /**
     * Gets id
     *
     * @return \Swagger\Client\Model\ConnectIdentityIdAmlResult
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param \Swagger\Client\Model\ConnectIdentityIdAmlResult $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets aml
     *
     * @return \Swagger\Client\Model\ConnectIdentityIdAmlResult
     */
    public function getAml()
    {
        return $this->container['aml'];
    }

    /**
     * Sets aml
     *
     * @param \Swagger\Client\Model\ConnectIdentityIdAmlResult $aml aml
     *
     * @return $this
     */
    public function setAml($aml)
    {
        $this->container['aml'] = $aml;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
