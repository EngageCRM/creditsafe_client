<?php
/**
 * ConnectIdentityRevalidateRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Creditsafe Connect
 *
 * Creditsafe Connect is a REST API that provides access to the <a href=\"https://www.creditsafe.com/gb/en/more/about/our-data.html\">Creditsafe Global Company Database.</a> This allows you to: <ul><li>Control your master data</li><li>Utilise up-to-date Business and Director information, enhancing your onboarding and qualification processes</li><li>Recieve alerts when your customer's and supplier's Credit Report changes</li></ul> <h2>Quick Start</h2> To start your Creditsafe Connect API integration you will need to have activated your account and set a password by following the instructions in your Welcome Email. If you have not received a Welcome Email please contact your Creditsafe Account Manager.</br></br>By default, you will have been setup on our Sandbox environment.</br></br> Using a REST API client construct an `/authenticate` POST request and enter your username & password (case-sensitive) into the POST body. A successful response will return an  `authentication token`.</br></br> Use the `authentication token` in an `Authorization` header on all other Creditsafe Connect calls as proof of your authenticity.  <h2>Environments</h2>Production Environment baseurl: <code> https://connect.creditsafe.com/v1 </code> </br> Sandbox Test Environment baseurl:  <code>https://connect.sandbox.creditsafe.com/v1</code> <h2>Resources</h2> <ul> <li><a href=\"https://creditsafe.github.io/connect-docs/cs_connectv1-15.html\">OpenAPI</a> specification.</li><li><a href=\"https://www.getpostman.com/collections/4406bbddb81c308db8ff\">Postman Collection</a> of the most common example calls to Creditsafe Connect.</li> <li><a href=\"https://connect-portal.creditsafe.com\"> A Front End Demo Site</a>. Use this as a quick easy way to validate your username & password and form requests.</li> <li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/categories/7000007071/folders/7000018640\"> Help Articles</a>  including: <ul><li>FAQs</li><li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000053487-connect-api-data-dictionaries\"> Data Dictionaries </a></li><li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000054765-connect-api-data-availability-per-country\"> Data Availability per Country </a></li><li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000054656-connect-api-feature-availability-per-country\"> Feature Availability Matrix</a></li></ul></ul>
 *
 * OpenAPI spec version: 1.5.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.34
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ConnectIdentityRevalidateRequest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ConnectIdentityRevalidateRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Connect.Identity.RevalidateRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'unique_id' => 'string',
'passport' => '\Swagger\Client\Model\ConnectIdentityPassport',
'drivers_license' => '\Swagger\Client\Model\ConnectIdentityDriversLicense',
'electricity_supplier' => '\Swagger\Client\Model\ConnectIdentityElectricitySupplier',
'european_id_card' => '\Swagger\Client\Model\ConnectIdentityEuropeanIDCard',
'ni_number' => '\Swagger\Client\Model\ConnectIdentityNINumber',
'bank_account_details' => '\Swagger\Client\Model\ConnectIdentityBankAccountDetails'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'unique_id' => null,
'passport' => null,
'drivers_license' => null,
'electricity_supplier' => null,
'european_id_card' => null,
'ni_number' => null,
'bank_account_details' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'unique_id' => 'uniqueId',
'passport' => 'passport',
'drivers_license' => 'driversLicense',
'electricity_supplier' => 'electricitySupplier',
'european_id_card' => 'europeanIDCard',
'ni_number' => 'niNumber',
'bank_account_details' => 'bankAccountDetails'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'unique_id' => 'setUniqueId',
'passport' => 'setPassport',
'drivers_license' => 'setDriversLicense',
'electricity_supplier' => 'setElectricitySupplier',
'european_id_card' => 'setEuropeanIdCard',
'ni_number' => 'setNiNumber',
'bank_account_details' => 'setBankAccountDetails'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'unique_id' => 'getUniqueId',
'passport' => 'getPassport',
'drivers_license' => 'getDriversLicense',
'electricity_supplier' => 'getElectricitySupplier',
'european_id_card' => 'getEuropeanIdCard',
'ni_number' => 'getNiNumber',
'bank_account_details' => 'getBankAccountDetails'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['unique_id'] = isset($data['unique_id']) ? $data['unique_id'] : null;
        $this->container['passport'] = isset($data['passport']) ? $data['passport'] : null;
        $this->container['drivers_license'] = isset($data['drivers_license']) ? $data['drivers_license'] : null;
        $this->container['electricity_supplier'] = isset($data['electricity_supplier']) ? $data['electricity_supplier'] : null;
        $this->container['european_id_card'] = isset($data['european_id_card']) ? $data['european_id_card'] : null;
        $this->container['ni_number'] = isset($data['ni_number']) ? $data['ni_number'] : null;
        $this->container['bank_account_details'] = isset($data['bank_account_details']) ? $data['bank_account_details'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets unique_id
     *
     * @return string
     */
    public function getUniqueId()
    {
        return $this->container['unique_id'];
    }

    /**
     * Sets unique_id
     *
     * @param string $unique_id unique_id
     *
     * @return $this
     */
    public function setUniqueId($unique_id)
    {
        $this->container['unique_id'] = $unique_id;

        return $this;
    }

    /**
     * Gets passport
     *
     * @return \Swagger\Client\Model\ConnectIdentityPassport
     */
    public function getPassport()
    {
        return $this->container['passport'];
    }

    /**
     * Sets passport
     *
     * @param \Swagger\Client\Model\ConnectIdentityPassport $passport passport
     *
     * @return $this
     */
    public function setPassport($passport)
    {
        $this->container['passport'] = $passport;

        return $this;
    }

    /**
     * Gets drivers_license
     *
     * @return \Swagger\Client\Model\ConnectIdentityDriversLicense
     */
    public function getDriversLicense()
    {
        return $this->container['drivers_license'];
    }

    /**
     * Sets drivers_license
     *
     * @param \Swagger\Client\Model\ConnectIdentityDriversLicense $drivers_license drivers_license
     *
     * @return $this
     */
    public function setDriversLicense($drivers_license)
    {
        $this->container['drivers_license'] = $drivers_license;

        return $this;
    }

    /**
     * Gets electricity_supplier
     *
     * @return \Swagger\Client\Model\ConnectIdentityElectricitySupplier
     */
    public function getElectricitySupplier()
    {
        return $this->container['electricity_supplier'];
    }

    /**
     * Sets electricity_supplier
     *
     * @param \Swagger\Client\Model\ConnectIdentityElectricitySupplier $electricity_supplier electricity_supplier
     *
     * @return $this
     */
    public function setElectricitySupplier($electricity_supplier)
    {
        $this->container['electricity_supplier'] = $electricity_supplier;

        return $this;
    }

    /**
     * Gets european_id_card
     *
     * @return \Swagger\Client\Model\ConnectIdentityEuropeanIDCard
     */
    public function getEuropeanIdCard()
    {
        return $this->container['european_id_card'];
    }

    /**
     * Sets european_id_card
     *
     * @param \Swagger\Client\Model\ConnectIdentityEuropeanIDCard $european_id_card european_id_card
     *
     * @return $this
     */
    public function setEuropeanIdCard($european_id_card)
    {
        $this->container['european_id_card'] = $european_id_card;

        return $this;
    }

    /**
     * Gets ni_number
     *
     * @return \Swagger\Client\Model\ConnectIdentityNINumber
     */
    public function getNiNumber()
    {
        return $this->container['ni_number'];
    }

    /**
     * Sets ni_number
     *
     * @param \Swagger\Client\Model\ConnectIdentityNINumber $ni_number ni_number
     *
     * @return $this
     */
    public function setNiNumber($ni_number)
    {
        $this->container['ni_number'] = $ni_number;

        return $this;
    }

    /**
     * Gets bank_account_details
     *
     * @return \Swagger\Client\Model\ConnectIdentityBankAccountDetails
     */
    public function getBankAccountDetails()
    {
        return $this->container['bank_account_details'];
    }

    /**
     * Sets bank_account_details
     *
     * @param \Swagger\Client\Model\ConnectIdentityBankAccountDetails $bank_account_details bank_account_details
     *
     * @return $this
     */
    public function setBankAccountDetails($bank_account_details)
    {
        $this->container['bank_account_details'] = $bank_account_details;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
