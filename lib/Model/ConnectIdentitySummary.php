<?php
/**
 * ConnectIdentitySummary
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Creditsafe Connect
 *
 * Creditsafe Connect is a REST API that provides access to the <a href=\"https://www.creditsafe.com/gb/en/more/about/our-data.html\">Creditsafe Global Company Database.</a> This allows you to: <ul><li>Control your master data</li><li>Utilise up-to-date Business and Director information, enhancing your onboarding and qualification processes</li><li>Recieve alerts when your customer's and supplier's Credit Report changes</li></ul> <h2>Quick Start</h2> To start your Creditsafe Connect API integration you will need to have activated your account and set a password by following the instructions in your Welcome Email. If you have not received a Welcome Email please contact your Creditsafe Account Manager.</br></br>By default, you will have been setup on our Sandbox environment.</br></br> Using a REST API client construct an `/authenticate` POST request and enter your username & password (case-sensitive) into the POST body. A successful response will return an  `authentication token`.</br></br> Use the `authentication token` in an `Authorization` header on all other Creditsafe Connect calls as proof of your authenticity.  <h2>Environments</h2>Production Environment baseurl: <code> https://connect.creditsafe.com/v1 </code> </br> Sandbox Test Environment baseurl:  <code>https://connect.sandbox.creditsafe.com/v1</code> <h2>Resources</h2> <ul> <li><a href=\"https://creditsafe.github.io/connect-docs/cs_connectv1-15.html\">OpenAPI</a> specification.</li><li><a href=\"https://www.getpostman.com/collections/4406bbddb81c308db8ff\">Postman Collection</a> of the most common example calls to Creditsafe Connect.</li> <li><a href=\"https://connect-portal.creditsafe.com\"> A Front End Demo Site</a>. Use this as a quick easy way to validate your username & password and form requests.</li> <li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/categories/7000007071/folders/7000018640\"> Help Articles</a>  including: <ul><li>FAQs</li><li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000053487-connect-api-data-dictionaries\"> Data Dictionaries </a></li><li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000054765-connect-api-data-availability-per-country\"> Data Availability per Country </a></li><li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000054656-connect-api-feature-availability-per-country\"> Feature Availability Matrix</a></li></ul></ul>
 *
 * OpenAPI spec version: 1.5.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.34
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ConnectIdentitySummary Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ConnectIdentitySummary implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Connect.Identity.Summary';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'name' => 'string',
'matched_data' => '\Swagger\Client\Model\ConnectIdentityReportMatchedData[]',
'match_level' => 'string',
'notices_of_corrections' => 'bool',
'total_disputes' => 'int',
'confirmed_address' => 'string',
'residency' => '\Swagger\Client\Model\ConnectIdentityReportResidencyConfirmation[]',
'credit_searches_at_current_address' => '\Swagger\Client\Model\ConnectIdentityReportCreditSearchesAtCurrentAddress',
'insolvency_at_address' => '\Swagger\Client\Model\ConnectIdentityReportInsolvencyAtAddress',
'links' => '\Swagger\Client\Model\ConnectIdentitySummaryLinks',
'judgements' => '\Swagger\Client\Model\ConnectIdentityReportSummaryJudgements',
'total_cifas' => 'int',
'rtr' => 'bool',
'share' => '\Swagger\Client\Model\ConnectIdentitySummaryShare',
'behavioural_data' => '\Swagger\Client\Model\ConnectIdentitySummaryBehaviouralData',
'impaired_credit_history' => '\Swagger\Client\Model\ConnectIdentitySummaryIch',
'third_party' => '\Swagger\Client\Model\ConnectIdentitySummaryThirdParty',
'address' => '\Swagger\Client\Model\ConnectIdentitySummaryAddress',
'in_debt' => '\Swagger\Client\Model\ConnectIdentitySummaryInDebt',
'card_data' => '\Swagger\Client\Model\ConnectIdentitySummaryCardData'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'name' => null,
'matched_data' => null,
'match_level' => null,
'notices_of_corrections' => null,
'total_disputes' => 'int32',
'confirmed_address' => null,
'residency' => null,
'credit_searches_at_current_address' => null,
'insolvency_at_address' => null,
'links' => null,
'judgements' => null,
'total_cifas' => 'int32',
'rtr' => null,
'share' => null,
'behavioural_data' => null,
'impaired_credit_history' => null,
'third_party' => null,
'address' => null,
'in_debt' => null,
'card_data' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'name' => 'name',
'matched_data' => 'matchedData',
'match_level' => 'matchLevel',
'notices_of_corrections' => 'noticesOfCorrections',
'total_disputes' => 'totalDisputes',
'confirmed_address' => 'confirmedAddress',
'residency' => 'residency',
'credit_searches_at_current_address' => 'creditSearchesAtCurrentAddress',
'insolvency_at_address' => 'insolvencyAtAddress',
'links' => 'links',
'judgements' => 'judgements',
'total_cifas' => 'totalCifas',
'rtr' => 'rtr',
'share' => 'share',
'behavioural_data' => 'behaviouralData',
'impaired_credit_history' => 'impairedCreditHistory',
'third_party' => 'thirdParty',
'address' => 'address',
'in_debt' => 'inDebt',
'card_data' => 'cardData'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'name' => 'setName',
'matched_data' => 'setMatchedData',
'match_level' => 'setMatchLevel',
'notices_of_corrections' => 'setNoticesOfCorrections',
'total_disputes' => 'setTotalDisputes',
'confirmed_address' => 'setConfirmedAddress',
'residency' => 'setResidency',
'credit_searches_at_current_address' => 'setCreditSearchesAtCurrentAddress',
'insolvency_at_address' => 'setInsolvencyAtAddress',
'links' => 'setLinks',
'judgements' => 'setJudgements',
'total_cifas' => 'setTotalCifas',
'rtr' => 'setRtr',
'share' => 'setShare',
'behavioural_data' => 'setBehaviouralData',
'impaired_credit_history' => 'setImpairedCreditHistory',
'third_party' => 'setThirdParty',
'address' => 'setAddress',
'in_debt' => 'setInDebt',
'card_data' => 'setCardData'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'name' => 'getName',
'matched_data' => 'getMatchedData',
'match_level' => 'getMatchLevel',
'notices_of_corrections' => 'getNoticesOfCorrections',
'total_disputes' => 'getTotalDisputes',
'confirmed_address' => 'getConfirmedAddress',
'residency' => 'getResidency',
'credit_searches_at_current_address' => 'getCreditSearchesAtCurrentAddress',
'insolvency_at_address' => 'getInsolvencyAtAddress',
'links' => 'getLinks',
'judgements' => 'getJudgements',
'total_cifas' => 'getTotalCifas',
'rtr' => 'getRtr',
'share' => 'getShare',
'behavioural_data' => 'getBehaviouralData',
'impaired_credit_history' => 'getImpairedCreditHistory',
'third_party' => 'getThirdParty',
'address' => 'getAddress',
'in_debt' => 'getInDebt',
'card_data' => 'getCardData'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['matched_data'] = isset($data['matched_data']) ? $data['matched_data'] : null;
        $this->container['match_level'] = isset($data['match_level']) ? $data['match_level'] : null;
        $this->container['notices_of_corrections'] = isset($data['notices_of_corrections']) ? $data['notices_of_corrections'] : null;
        $this->container['total_disputes'] = isset($data['total_disputes']) ? $data['total_disputes'] : null;
        $this->container['confirmed_address'] = isset($data['confirmed_address']) ? $data['confirmed_address'] : null;
        $this->container['residency'] = isset($data['residency']) ? $data['residency'] : null;
        $this->container['credit_searches_at_current_address'] = isset($data['credit_searches_at_current_address']) ? $data['credit_searches_at_current_address'] : null;
        $this->container['insolvency_at_address'] = isset($data['insolvency_at_address']) ? $data['insolvency_at_address'] : null;
        $this->container['links'] = isset($data['links']) ? $data['links'] : null;
        $this->container['judgements'] = isset($data['judgements']) ? $data['judgements'] : null;
        $this->container['total_cifas'] = isset($data['total_cifas']) ? $data['total_cifas'] : null;
        $this->container['rtr'] = isset($data['rtr']) ? $data['rtr'] : null;
        $this->container['share'] = isset($data['share']) ? $data['share'] : null;
        $this->container['behavioural_data'] = isset($data['behavioural_data']) ? $data['behavioural_data'] : null;
        $this->container['impaired_credit_history'] = isset($data['impaired_credit_history']) ? $data['impaired_credit_history'] : null;
        $this->container['third_party'] = isset($data['third_party']) ? $data['third_party'] : null;
        $this->container['address'] = isset($data['address']) ? $data['address'] : null;
        $this->container['in_debt'] = isset($data['in_debt']) ? $data['in_debt'] : null;
        $this->container['card_data'] = isset($data['card_data']) ? $data['card_data'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets matched_data
     *
     * @return \Swagger\Client\Model\ConnectIdentityReportMatchedData[]
     */
    public function getMatchedData()
    {
        return $this->container['matched_data'];
    }

    /**
     * Sets matched_data
     *
     * @param \Swagger\Client\Model\ConnectIdentityReportMatchedData[] $matched_data matched_data
     *
     * @return $this
     */
    public function setMatchedData($matched_data)
    {
        $this->container['matched_data'] = $matched_data;

        return $this;
    }

    /**
     * Gets match_level
     *
     * @return string
     */
    public function getMatchLevel()
    {
        return $this->container['match_level'];
    }

    /**
     * Sets match_level
     *
     * @param string $match_level match_level
     *
     * @return $this
     */
    public function setMatchLevel($match_level)
    {
        $this->container['match_level'] = $match_level;

        return $this;
    }

    /**
     * Gets notices_of_corrections
     *
     * @return bool
     */
    public function getNoticesOfCorrections()
    {
        return $this->container['notices_of_corrections'];
    }

    /**
     * Sets notices_of_corrections
     *
     * @param bool $notices_of_corrections notices_of_corrections
     *
     * @return $this
     */
    public function setNoticesOfCorrections($notices_of_corrections)
    {
        $this->container['notices_of_corrections'] = $notices_of_corrections;

        return $this;
    }

    /**
     * Gets total_disputes
     *
     * @return int
     */
    public function getTotalDisputes()
    {
        return $this->container['total_disputes'];
    }

    /**
     * Sets total_disputes
     *
     * @param int $total_disputes total_disputes
     *
     * @return $this
     */
    public function setTotalDisputes($total_disputes)
    {
        $this->container['total_disputes'] = $total_disputes;

        return $this;
    }

    /**
     * Gets confirmed_address
     *
     * @return string
     */
    public function getConfirmedAddress()
    {
        return $this->container['confirmed_address'];
    }

    /**
     * Sets confirmed_address
     *
     * @param string $confirmed_address confirmed_address
     *
     * @return $this
     */
    public function setConfirmedAddress($confirmed_address)
    {
        $this->container['confirmed_address'] = $confirmed_address;

        return $this;
    }

    /**
     * Gets residency
     *
     * @return \Swagger\Client\Model\ConnectIdentityReportResidencyConfirmation[]
     */
    public function getResidency()
    {
        return $this->container['residency'];
    }

    /**
     * Sets residency
     *
     * @param \Swagger\Client\Model\ConnectIdentityReportResidencyConfirmation[] $residency residency
     *
     * @return $this
     */
    public function setResidency($residency)
    {
        $this->container['residency'] = $residency;

        return $this;
    }

    /**
     * Gets credit_searches_at_current_address
     *
     * @return \Swagger\Client\Model\ConnectIdentityReportCreditSearchesAtCurrentAddress
     */
    public function getCreditSearchesAtCurrentAddress()
    {
        return $this->container['credit_searches_at_current_address'];
    }

    /**
     * Sets credit_searches_at_current_address
     *
     * @param \Swagger\Client\Model\ConnectIdentityReportCreditSearchesAtCurrentAddress $credit_searches_at_current_address credit_searches_at_current_address
     *
     * @return $this
     */
    public function setCreditSearchesAtCurrentAddress($credit_searches_at_current_address)
    {
        $this->container['credit_searches_at_current_address'] = $credit_searches_at_current_address;

        return $this;
    }

    /**
     * Gets insolvency_at_address
     *
     * @return \Swagger\Client\Model\ConnectIdentityReportInsolvencyAtAddress
     */
    public function getInsolvencyAtAddress()
    {
        return $this->container['insolvency_at_address'];
    }

    /**
     * Sets insolvency_at_address
     *
     * @param \Swagger\Client\Model\ConnectIdentityReportInsolvencyAtAddress $insolvency_at_address insolvency_at_address
     *
     * @return $this
     */
    public function setInsolvencyAtAddress($insolvency_at_address)
    {
        $this->container['insolvency_at_address'] = $insolvency_at_address;

        return $this;
    }

    /**
     * Gets links
     *
     * @return \Swagger\Client\Model\ConnectIdentitySummaryLinks
     */
    public function getLinks()
    {
        return $this->container['links'];
    }

    /**
     * Sets links
     *
     * @param \Swagger\Client\Model\ConnectIdentitySummaryLinks $links links
     *
     * @return $this
     */
    public function setLinks($links)
    {
        $this->container['links'] = $links;

        return $this;
    }

    /**
     * Gets judgements
     *
     * @return \Swagger\Client\Model\ConnectIdentityReportSummaryJudgements
     */
    public function getJudgements()
    {
        return $this->container['judgements'];
    }

    /**
     * Sets judgements
     *
     * @param \Swagger\Client\Model\ConnectIdentityReportSummaryJudgements $judgements judgements
     *
     * @return $this
     */
    public function setJudgements($judgements)
    {
        $this->container['judgements'] = $judgements;

        return $this;
    }

    /**
     * Gets total_cifas
     *
     * @return int
     */
    public function getTotalCifas()
    {
        return $this->container['total_cifas'];
    }

    /**
     * Sets total_cifas
     *
     * @param int $total_cifas total_cifas
     *
     * @return $this
     */
    public function setTotalCifas($total_cifas)
    {
        $this->container['total_cifas'] = $total_cifas;

        return $this;
    }

    /**
     * Gets rtr
     *
     * @return bool
     */
    public function getRtr()
    {
        return $this->container['rtr'];
    }

    /**
     * Sets rtr
     *
     * @param bool $rtr rtr
     *
     * @return $this
     */
    public function setRtr($rtr)
    {
        $this->container['rtr'] = $rtr;

        return $this;
    }

    /**
     * Gets share
     *
     * @return \Swagger\Client\Model\ConnectIdentitySummaryShare
     */
    public function getShare()
    {
        return $this->container['share'];
    }

    /**
     * Sets share
     *
     * @param \Swagger\Client\Model\ConnectIdentitySummaryShare $share share
     *
     * @return $this
     */
    public function setShare($share)
    {
        $this->container['share'] = $share;

        return $this;
    }

    /**
     * Gets behavioural_data
     *
     * @return \Swagger\Client\Model\ConnectIdentitySummaryBehaviouralData
     */
    public function getBehaviouralData()
    {
        return $this->container['behavioural_data'];
    }

    /**
     * Sets behavioural_data
     *
     * @param \Swagger\Client\Model\ConnectIdentitySummaryBehaviouralData $behavioural_data behavioural_data
     *
     * @return $this
     */
    public function setBehaviouralData($behavioural_data)
    {
        $this->container['behavioural_data'] = $behavioural_data;

        return $this;
    }

    /**
     * Gets impaired_credit_history
     *
     * @return \Swagger\Client\Model\ConnectIdentitySummaryIch
     */
    public function getImpairedCreditHistory()
    {
        return $this->container['impaired_credit_history'];
    }

    /**
     * Sets impaired_credit_history
     *
     * @param \Swagger\Client\Model\ConnectIdentitySummaryIch $impaired_credit_history impaired_credit_history
     *
     * @return $this
     */
    public function setImpairedCreditHistory($impaired_credit_history)
    {
        $this->container['impaired_credit_history'] = $impaired_credit_history;

        return $this;
    }

    /**
     * Gets third_party
     *
     * @return \Swagger\Client\Model\ConnectIdentitySummaryThirdParty
     */
    public function getThirdParty()
    {
        return $this->container['third_party'];
    }

    /**
     * Sets third_party
     *
     * @param \Swagger\Client\Model\ConnectIdentitySummaryThirdParty $third_party third_party
     *
     * @return $this
     */
    public function setThirdParty($third_party)
    {
        $this->container['third_party'] = $third_party;

        return $this;
    }

    /**
     * Gets address
     *
     * @return \Swagger\Client\Model\ConnectIdentitySummaryAddress
     */
    public function getAddress()
    {
        return $this->container['address'];
    }

    /**
     * Sets address
     *
     * @param \Swagger\Client\Model\ConnectIdentitySummaryAddress $address address
     *
     * @return $this
     */
    public function setAddress($address)
    {
        $this->container['address'] = $address;

        return $this;
    }

    /**
     * Gets in_debt
     *
     * @return \Swagger\Client\Model\ConnectIdentitySummaryInDebt
     */
    public function getInDebt()
    {
        return $this->container['in_debt'];
    }

    /**
     * Sets in_debt
     *
     * @param \Swagger\Client\Model\ConnectIdentitySummaryInDebt $in_debt in_debt
     *
     * @return $this
     */
    public function setInDebt($in_debt)
    {
        $this->container['in_debt'] = $in_debt;

        return $this;
    }

    /**
     * Gets card_data
     *
     * @return \Swagger\Client\Model\ConnectIdentitySummaryCardData
     */
    public function getCardData()
    {
        return $this->container['card_data'];
    }

    /**
     * Sets card_data
     *
     * @param \Swagger\Client\Model\ConnectIdentitySummaryCardData $card_data card_data
     *
     * @return $this
     */
    public function setCardData($card_data)
    {
        $this->container['card_data'] = $card_data;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
