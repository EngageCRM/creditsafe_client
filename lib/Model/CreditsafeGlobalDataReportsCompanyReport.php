<?php
/**
 * CreditsafeGlobalDataReportsCompanyReport
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Creditsafe Connect
 *
 * Creditsafe Connect is a REST API that provides access to the <a href=\"https://www.creditsafe.com/gb/en/more/about/our-data.html\">Creditsafe Global Company Database.</a> This allows you to: <ul><li>Control your master data</li><li>Utilise up-to-date Business and Director information, enhancing your onboarding and qualification processes</li><li>Recieve alerts when your customer's and supplier's Credit Report changes</li></ul> <h2>Quick Start</h2> To start your Creditsafe Connect API integration you will need to have activated your account and set a password by following the instructions in your Welcome Email. If you have not received a Welcome Email please contact your Creditsafe Account Manager.</br></br>By default, you will have been setup on our Sandbox environment.</br></br> Using a REST API client construct an `/authenticate` POST request and enter your username & password (case-sensitive) into the POST body. A successful response will return an  `authentication token`.</br></br> Use the `authentication token` in an `Authorization` header on all other Creditsafe Connect calls as proof of your authenticity.  <h2>Environments</h2>Production Environment baseurl: <code> https://connect.creditsafe.com/v1 </code> </br> Sandbox Test Environment baseurl:  <code>https://connect.sandbox.creditsafe.com/v1</code> <h2>Resources</h2> <ul> <li><a href=\"https://creditsafe.github.io/connect-docs/cs_connectv1-15.html\">OpenAPI</a> specification.</li><li><a href=\"https://www.getpostman.com/collections/4406bbddb81c308db8ff\">Postman Collection</a> of the most common example calls to Creditsafe Connect.</li> <li><a href=\"https://connect-portal.creditsafe.com\"> A Front End Demo Site</a>. Use this as a quick easy way to validate your username & password and form requests.</li> <li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/categories/7000007071/folders/7000018640\"> Help Articles</a>  including: <ul><li>FAQs</li><li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000053487-connect-api-data-dictionaries\"> Data Dictionaries </a></li><li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000054765-connect-api-data-availability-per-country\"> Data Availability per Country </a></li><li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000054656-connect-api-feature-availability-per-country\"> Feature Availability Matrix</a></li></ul></ul>
 *
 * OpenAPI spec version: 1.5.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.34
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * CreditsafeGlobalDataReportsCompanyReport Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CreditsafeGlobalDataReportsCompanyReport implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Creditsafe.GlobalData.Reports.CompanyReport';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'company_id' => 'string',
'language' => '\Swagger\Client\Model\CreditsafeGlobalDataLanguage',
'company_summary' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsLtdCompanySummary',
'company_identification' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsLtdCompanyIdentification',
'credit_score' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsLtdCreditScore',
'contact_information' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsLtdContactInformation',
'share_capital_structure' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsLtdShareCapitalStructure',
'directors' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsLtdDirectors',
'directorships' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsDirectorships',
'other_information' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsLtdOtherInformation',
'group_structure' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsLtdGroupStructure',
'extended_group_structure' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsCompanyInGroup[]',
'financial_statements' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsGlobalFinancialsGGS[]',
'local_financial_statements' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsLtdFinancialStatement[]',
'negative_information' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsReportNegativeInformation',
'additional_information' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsReportAdditionalInformation',
'directors_extra' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsLtdDirectorsExtra',
'extended_group_structure_extra' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsLtdExtendedGroupStructureExtra',
'payment_data' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsReportPaymentData',
'payment_data_extra' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsReportPaymentDataExtra',
'alternate_summary' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsReportAlternateSummary',
'negative_information_extra' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsReportNegativeInformationExtra'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'company_id' => null,
'language' => null,
'company_summary' => null,
'company_identification' => null,
'credit_score' => null,
'contact_information' => null,
'share_capital_structure' => null,
'directors' => null,
'directorships' => null,
'other_information' => null,
'group_structure' => null,
'extended_group_structure' => null,
'financial_statements' => null,
'local_financial_statements' => null,
'negative_information' => null,
'additional_information' => null,
'directors_extra' => null,
'extended_group_structure_extra' => null,
'payment_data' => null,
'payment_data_extra' => null,
'alternate_summary' => null,
'negative_information_extra' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'company_id' => 'companyId',
'language' => 'language',
'company_summary' => 'companySummary',
'company_identification' => 'companyIdentification',
'credit_score' => 'creditScore',
'contact_information' => 'contactInformation',
'share_capital_structure' => 'shareCapitalStructure',
'directors' => 'directors',
'directorships' => 'directorships',
'other_information' => 'otherInformation',
'group_structure' => 'groupStructure',
'extended_group_structure' => 'extendedGroupStructure',
'financial_statements' => 'financialStatements',
'local_financial_statements' => 'localFinancialStatements',
'negative_information' => 'negativeInformation',
'additional_information' => 'additionalInformation',
'directors_extra' => 'directorsExtra',
'extended_group_structure_extra' => 'extendedGroupStructureExtra',
'payment_data' => 'paymentData',
'payment_data_extra' => 'paymentDataExtra',
'alternate_summary' => 'alternateSummary',
'negative_information_extra' => 'negativeInformationExtra'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'company_id' => 'setCompanyId',
'language' => 'setLanguage',
'company_summary' => 'setCompanySummary',
'company_identification' => 'setCompanyIdentification',
'credit_score' => 'setCreditScore',
'contact_information' => 'setContactInformation',
'share_capital_structure' => 'setShareCapitalStructure',
'directors' => 'setDirectors',
'directorships' => 'setDirectorships',
'other_information' => 'setOtherInformation',
'group_structure' => 'setGroupStructure',
'extended_group_structure' => 'setExtendedGroupStructure',
'financial_statements' => 'setFinancialStatements',
'local_financial_statements' => 'setLocalFinancialStatements',
'negative_information' => 'setNegativeInformation',
'additional_information' => 'setAdditionalInformation',
'directors_extra' => 'setDirectorsExtra',
'extended_group_structure_extra' => 'setExtendedGroupStructureExtra',
'payment_data' => 'setPaymentData',
'payment_data_extra' => 'setPaymentDataExtra',
'alternate_summary' => 'setAlternateSummary',
'negative_information_extra' => 'setNegativeInformationExtra'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'company_id' => 'getCompanyId',
'language' => 'getLanguage',
'company_summary' => 'getCompanySummary',
'company_identification' => 'getCompanyIdentification',
'credit_score' => 'getCreditScore',
'contact_information' => 'getContactInformation',
'share_capital_structure' => 'getShareCapitalStructure',
'directors' => 'getDirectors',
'directorships' => 'getDirectorships',
'other_information' => 'getOtherInformation',
'group_structure' => 'getGroupStructure',
'extended_group_structure' => 'getExtendedGroupStructure',
'financial_statements' => 'getFinancialStatements',
'local_financial_statements' => 'getLocalFinancialStatements',
'negative_information' => 'getNegativeInformation',
'additional_information' => 'getAdditionalInformation',
'directors_extra' => 'getDirectorsExtra',
'extended_group_structure_extra' => 'getExtendedGroupStructureExtra',
'payment_data' => 'getPaymentData',
'payment_data_extra' => 'getPaymentDataExtra',
'alternate_summary' => 'getAlternateSummary',
'negative_information_extra' => 'getNegativeInformationExtra'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['company_id'] = isset($data['company_id']) ? $data['company_id'] : null;
        $this->container['language'] = isset($data['language']) ? $data['language'] : null;
        $this->container['company_summary'] = isset($data['company_summary']) ? $data['company_summary'] : null;
        $this->container['company_identification'] = isset($data['company_identification']) ? $data['company_identification'] : null;
        $this->container['credit_score'] = isset($data['credit_score']) ? $data['credit_score'] : null;
        $this->container['contact_information'] = isset($data['contact_information']) ? $data['contact_information'] : null;
        $this->container['share_capital_structure'] = isset($data['share_capital_structure']) ? $data['share_capital_structure'] : null;
        $this->container['directors'] = isset($data['directors']) ? $data['directors'] : null;
        $this->container['directorships'] = isset($data['directorships']) ? $data['directorships'] : null;
        $this->container['other_information'] = isset($data['other_information']) ? $data['other_information'] : null;
        $this->container['group_structure'] = isset($data['group_structure']) ? $data['group_structure'] : null;
        $this->container['extended_group_structure'] = isset($data['extended_group_structure']) ? $data['extended_group_structure'] : null;
        $this->container['financial_statements'] = isset($data['financial_statements']) ? $data['financial_statements'] : null;
        $this->container['local_financial_statements'] = isset($data['local_financial_statements']) ? $data['local_financial_statements'] : null;
        $this->container['negative_information'] = isset($data['negative_information']) ? $data['negative_information'] : null;
        $this->container['additional_information'] = isset($data['additional_information']) ? $data['additional_information'] : null;
        $this->container['directors_extra'] = isset($data['directors_extra']) ? $data['directors_extra'] : null;
        $this->container['extended_group_structure_extra'] = isset($data['extended_group_structure_extra']) ? $data['extended_group_structure_extra'] : null;
        $this->container['payment_data'] = isset($data['payment_data']) ? $data['payment_data'] : null;
        $this->container['payment_data_extra'] = isset($data['payment_data_extra']) ? $data['payment_data_extra'] : null;
        $this->container['alternate_summary'] = isset($data['alternate_summary']) ? $data['alternate_summary'] : null;
        $this->container['negative_information_extra'] = isset($data['negative_information_extra']) ? $data['negative_information_extra'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets company_id
     *
     * @return string
     */
    public function getCompanyId()
    {
        return $this->container['company_id'];
    }

    /**
     * Sets company_id
     *
     * @param string $company_id company_id
     *
     * @return $this
     */
    public function setCompanyId($company_id)
    {
        $this->container['company_id'] = $company_id;

        return $this;
    }

    /**
     * Gets language
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataLanguage
     */
    public function getLanguage()
    {
        return $this->container['language'];
    }

    /**
     * Sets language
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataLanguage $language language
     *
     * @return $this
     */
    public function setLanguage($language)
    {
        $this->container['language'] = $language;

        return $this;
    }

    /**
     * Gets company_summary
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsLtdCompanySummary
     */
    public function getCompanySummary()
    {
        return $this->container['company_summary'];
    }

    /**
     * Sets company_summary
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsLtdCompanySummary $company_summary company_summary
     *
     * @return $this
     */
    public function setCompanySummary($company_summary)
    {
        $this->container['company_summary'] = $company_summary;

        return $this;
    }

    /**
     * Gets company_identification
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsLtdCompanyIdentification
     */
    public function getCompanyIdentification()
    {
        return $this->container['company_identification'];
    }

    /**
     * Sets company_identification
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsLtdCompanyIdentification $company_identification company_identification
     *
     * @return $this
     */
    public function setCompanyIdentification($company_identification)
    {
        $this->container['company_identification'] = $company_identification;

        return $this;
    }

    /**
     * Gets credit_score
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsLtdCreditScore
     */
    public function getCreditScore()
    {
        return $this->container['credit_score'];
    }

    /**
     * Sets credit_score
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsLtdCreditScore $credit_score credit_score
     *
     * @return $this
     */
    public function setCreditScore($credit_score)
    {
        $this->container['credit_score'] = $credit_score;

        return $this;
    }

    /**
     * Gets contact_information
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsLtdContactInformation
     */
    public function getContactInformation()
    {
        return $this->container['contact_information'];
    }

    /**
     * Sets contact_information
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsLtdContactInformation $contact_information contact_information
     *
     * @return $this
     */
    public function setContactInformation($contact_information)
    {
        $this->container['contact_information'] = $contact_information;

        return $this;
    }

    /**
     * Gets share_capital_structure
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsLtdShareCapitalStructure
     */
    public function getShareCapitalStructure()
    {
        return $this->container['share_capital_structure'];
    }

    /**
     * Sets share_capital_structure
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsLtdShareCapitalStructure $share_capital_structure share_capital_structure
     *
     * @return $this
     */
    public function setShareCapitalStructure($share_capital_structure)
    {
        $this->container['share_capital_structure'] = $share_capital_structure;

        return $this;
    }

    /**
     * Gets directors
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsLtdDirectors
     */
    public function getDirectors()
    {
        return $this->container['directors'];
    }

    /**
     * Sets directors
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsLtdDirectors $directors directors
     *
     * @return $this
     */
    public function setDirectors($directors)
    {
        $this->container['directors'] = $directors;

        return $this;
    }

    /**
     * Gets directorships
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsDirectorships
     */
    public function getDirectorships()
    {
        return $this->container['directorships'];
    }

    /**
     * Sets directorships
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsDirectorships $directorships directorships
     *
     * @return $this
     */
    public function setDirectorships($directorships)
    {
        $this->container['directorships'] = $directorships;

        return $this;
    }

    /**
     * Gets other_information
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsLtdOtherInformation
     */
    public function getOtherInformation()
    {
        return $this->container['other_information'];
    }

    /**
     * Sets other_information
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsLtdOtherInformation $other_information other_information
     *
     * @return $this
     */
    public function setOtherInformation($other_information)
    {
        $this->container['other_information'] = $other_information;

        return $this;
    }

    /**
     * Gets group_structure
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsLtdGroupStructure
     */
    public function getGroupStructure()
    {
        return $this->container['group_structure'];
    }

    /**
     * Sets group_structure
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsLtdGroupStructure $group_structure group_structure
     *
     * @return $this
     */
    public function setGroupStructure($group_structure)
    {
        $this->container['group_structure'] = $group_structure;

        return $this;
    }

    /**
     * Gets extended_group_structure
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsCompanyInGroup[]
     */
    public function getExtendedGroupStructure()
    {
        return $this->container['extended_group_structure'];
    }

    /**
     * Sets extended_group_structure
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsCompanyInGroup[] $extended_group_structure extended_group_structure
     *
     * @return $this
     */
    public function setExtendedGroupStructure($extended_group_structure)
    {
        $this->container['extended_group_structure'] = $extended_group_structure;

        return $this;
    }

    /**
     * Gets financial_statements
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsGlobalFinancialsGGS[]
     */
    public function getFinancialStatements()
    {
        return $this->container['financial_statements'];
    }

    /**
     * Sets financial_statements
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsGlobalFinancialsGGS[] $financial_statements financial_statements
     *
     * @return $this
     */
    public function setFinancialStatements($financial_statements)
    {
        $this->container['financial_statements'] = $financial_statements;

        return $this;
    }

    /**
     * Gets local_financial_statements
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsLtdFinancialStatement[]
     */
    public function getLocalFinancialStatements()
    {
        return $this->container['local_financial_statements'];
    }

    /**
     * Sets local_financial_statements
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsLtdFinancialStatement[] $local_financial_statements local_financial_statements
     *
     * @return $this
     */
    public function setLocalFinancialStatements($local_financial_statements)
    {
        $this->container['local_financial_statements'] = $local_financial_statements;

        return $this;
    }

    /**
     * Gets negative_information
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsReportNegativeInformation
     */
    public function getNegativeInformation()
    {
        return $this->container['negative_information'];
    }

    /**
     * Sets negative_information
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsReportNegativeInformation $negative_information negative_information
     *
     * @return $this
     */
    public function setNegativeInformation($negative_information)
    {
        $this->container['negative_information'] = $negative_information;

        return $this;
    }

    /**
     * Gets additional_information
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsReportAdditionalInformation
     */
    public function getAdditionalInformation()
    {
        return $this->container['additional_information'];
    }

    /**
     * Sets additional_information
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsReportAdditionalInformation $additional_information additional_information
     *
     * @return $this
     */
    public function setAdditionalInformation($additional_information)
    {
        $this->container['additional_information'] = $additional_information;

        return $this;
    }

    /**
     * Gets directors_extra
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsLtdDirectorsExtra
     */
    public function getDirectorsExtra()
    {
        return $this->container['directors_extra'];
    }

    /**
     * Sets directors_extra
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsLtdDirectorsExtra $directors_extra directors_extra
     *
     * @return $this
     */
    public function setDirectorsExtra($directors_extra)
    {
        $this->container['directors_extra'] = $directors_extra;

        return $this;
    }

    /**
     * Gets extended_group_structure_extra
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsLtdExtendedGroupStructureExtra
     */
    public function getExtendedGroupStructureExtra()
    {
        return $this->container['extended_group_structure_extra'];
    }

    /**
     * Sets extended_group_structure_extra
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsLtdExtendedGroupStructureExtra $extended_group_structure_extra extended_group_structure_extra
     *
     * @return $this
     */
    public function setExtendedGroupStructureExtra($extended_group_structure_extra)
    {
        $this->container['extended_group_structure_extra'] = $extended_group_structure_extra;

        return $this;
    }

    /**
     * Gets payment_data
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsReportPaymentData
     */
    public function getPaymentData()
    {
        return $this->container['payment_data'];
    }

    /**
     * Sets payment_data
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsReportPaymentData $payment_data payment_data
     *
     * @return $this
     */
    public function setPaymentData($payment_data)
    {
        $this->container['payment_data'] = $payment_data;

        return $this;
    }

    /**
     * Gets payment_data_extra
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsReportPaymentDataExtra
     */
    public function getPaymentDataExtra()
    {
        return $this->container['payment_data_extra'];
    }

    /**
     * Sets payment_data_extra
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsReportPaymentDataExtra $payment_data_extra payment_data_extra
     *
     * @return $this
     */
    public function setPaymentDataExtra($payment_data_extra)
    {
        $this->container['payment_data_extra'] = $payment_data_extra;

        return $this;
    }

    /**
     * Gets alternate_summary
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsReportAlternateSummary
     */
    public function getAlternateSummary()
    {
        return $this->container['alternate_summary'];
    }

    /**
     * Sets alternate_summary
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsReportAlternateSummary $alternate_summary alternate_summary
     *
     * @return $this
     */
    public function setAlternateSummary($alternate_summary)
    {
        $this->container['alternate_summary'] = $alternate_summary;

        return $this;
    }

    /**
     * Gets negative_information_extra
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsReportNegativeInformationExtra
     */
    public function getNegativeInformationExtra()
    {
        return $this->container['negative_information_extra'];
    }

    /**
     * Sets negative_information_extra
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsReportNegativeInformationExtra $negative_information_extra negative_information_extra
     *
     * @return $this
     */
    public function setNegativeInformationExtra($negative_information_extra)
    {
        $this->container['negative_information_extra'] = $negative_information_extra;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
