<?php
/**
 * CreditsafeGlobalDataReportsCreditRating
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Creditsafe Connect
 *
 * Creditsafe Connect is a REST API that provides access to the <a href=\"https://www.creditsafe.com/gb/en/more/about/our-data.html\">Creditsafe Global Company Database.</a> This allows you to: <ul><li>Control your master data</li><li>Utilise up-to-date Business and Director information, enhancing your onboarding and qualification processes</li><li>Recieve alerts when your customer's and supplier's Credit Report changes</li></ul> <h2>Quick Start</h2> To start your Creditsafe Connect API integration you will need to have activated your account and set a password by following the instructions in your Welcome Email. If you have not received a Welcome Email please contact your Creditsafe Account Manager.</br></br>By default, you will have been setup on our Sandbox environment.</br></br> Using a REST API client construct an `/authenticate` POST request and enter your username & password (case-sensitive) into the POST body. A successful response will return an  `authentication token`.</br></br> Use the `authentication token` in an `Authorization` header on all other Creditsafe Connect calls as proof of your authenticity.  <h2>Environments</h2>Production Environment baseurl: <code> https://connect.creditsafe.com/v1 </code> </br> Sandbox Test Environment baseurl:  <code>https://connect.sandbox.creditsafe.com/v1</code> <h2>Resources</h2> <ul> <li><a href=\"https://creditsafe.github.io/connect-docs/cs_connectv1-15.html\">OpenAPI</a> specification.</li><li><a href=\"https://www.getpostman.com/collections/4406bbddb81c308db8ff\">Postman Collection</a> of the most common example calls to Creditsafe Connect.</li> <li><a href=\"https://connect-portal.creditsafe.com\"> A Front End Demo Site</a>. Use this as a quick easy way to validate your username & password and form requests.</li> <li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/categories/7000007071/folders/7000018640\"> Help Articles</a>  including: <ul><li>FAQs</li><li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000053487-connect-api-data-dictionaries\"> Data Dictionaries </a></li><li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000054765-connect-api-data-availability-per-country\"> Data Availability per Country </a></li><li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000054656-connect-api-feature-availability-per-country\"> Feature Availability Matrix</a></li></ul></ul>
 *
 * OpenAPI spec version: 1.5.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.34
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * CreditsafeGlobalDataReportsCreditRating Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CreditsafeGlobalDataReportsCreditRating implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Creditsafe.GlobalData.Reports.CreditRating';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'common_value' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsCommonRatingValue',
'common_description' => 'string',
'credit_limit' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsFinancialValue1SystemString',
'provider_value' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsRangeDescribedValue1SystemString',
'provider_description' => 'string',
'pod' => 'double',
'assessment' => 'string'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'common_value' => null,
'common_description' => null,
'credit_limit' => null,
'provider_value' => null,
'provider_description' => null,
'pod' => 'double',
'assessment' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'common_value' => 'commonValue',
'common_description' => 'commonDescription',
'credit_limit' => 'creditLimit',
'provider_value' => 'providerValue',
'provider_description' => 'providerDescription',
'pod' => 'pod',
'assessment' => 'assessment'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'common_value' => 'setCommonValue',
'common_description' => 'setCommonDescription',
'credit_limit' => 'setCreditLimit',
'provider_value' => 'setProviderValue',
'provider_description' => 'setProviderDescription',
'pod' => 'setPod',
'assessment' => 'setAssessment'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'common_value' => 'getCommonValue',
'common_description' => 'getCommonDescription',
'credit_limit' => 'getCreditLimit',
'provider_value' => 'getProviderValue',
'provider_description' => 'getProviderDescription',
'pod' => 'getPod',
'assessment' => 'getAssessment'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['common_value'] = isset($data['common_value']) ? $data['common_value'] : null;
        $this->container['common_description'] = isset($data['common_description']) ? $data['common_description'] : null;
        $this->container['credit_limit'] = isset($data['credit_limit']) ? $data['credit_limit'] : null;
        $this->container['provider_value'] = isset($data['provider_value']) ? $data['provider_value'] : null;
        $this->container['provider_description'] = isset($data['provider_description']) ? $data['provider_description'] : null;
        $this->container['pod'] = isset($data['pod']) ? $data['pod'] : null;
        $this->container['assessment'] = isset($data['assessment']) ? $data['assessment'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets common_value
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsCommonRatingValue
     */
    public function getCommonValue()
    {
        return $this->container['common_value'];
    }

    /**
     * Sets common_value
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsCommonRatingValue $common_value common_value
     *
     * @return $this
     */
    public function setCommonValue($common_value)
    {
        $this->container['common_value'] = $common_value;

        return $this;
    }

    /**
     * Gets common_description
     *
     * @return string
     */
    public function getCommonDescription()
    {
        return $this->container['common_description'];
    }

    /**
     * Sets common_description
     *
     * @param string $common_description common_description
     *
     * @return $this
     */
    public function setCommonDescription($common_description)
    {
        $this->container['common_description'] = $common_description;

        return $this;
    }

    /**
     * Gets credit_limit
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsFinancialValue1SystemString
     */
    public function getCreditLimit()
    {
        return $this->container['credit_limit'];
    }

    /**
     * Sets credit_limit
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsFinancialValue1SystemString $credit_limit credit_limit
     *
     * @return $this
     */
    public function setCreditLimit($credit_limit)
    {
        $this->container['credit_limit'] = $credit_limit;

        return $this;
    }

    /**
     * Gets provider_value
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsRangeDescribedValue1SystemString
     */
    public function getProviderValue()
    {
        return $this->container['provider_value'];
    }

    /**
     * Sets provider_value
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsRangeDescribedValue1SystemString $provider_value provider_value
     *
     * @return $this
     */
    public function setProviderValue($provider_value)
    {
        $this->container['provider_value'] = $provider_value;

        return $this;
    }

    /**
     * Gets provider_description
     *
     * @return string
     */
    public function getProviderDescription()
    {
        return $this->container['provider_description'];
    }

    /**
     * Sets provider_description
     *
     * @param string $provider_description provider_description
     *
     * @return $this
     */
    public function setProviderDescription($provider_description)
    {
        $this->container['provider_description'] = $provider_description;

        return $this;
    }

    /**
     * Gets pod
     *
     * @return double
     */
    public function getPod()
    {
        return $this->container['pod'];
    }

    /**
     * Sets pod
     *
     * @param double $pod pod
     *
     * @return $this
     */
    public function setPod($pod)
    {
        $this->container['pod'] = $pod;

        return $this;
    }

    /**
     * Gets assessment
     *
     * @return string
     */
    public function getAssessment()
    {
        return $this->container['assessment'];
    }

    /**
     * Sets assessment
     *
     * @param string $assessment assessment
     *
     * @return $this
     */
    public function setAssessment($assessment)
    {
        $this->container['assessment'] = $assessment;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
