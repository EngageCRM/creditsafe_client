<?php
/**
 * CreditsafeGlobalDataReportsLtdShareCapitalStructure
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Creditsafe Connect
 *
 * Creditsafe Connect is a REST API that provides access to the <a href=\"https://www.creditsafe.com/gb/en/more/about/our-data.html\">Creditsafe Global Company Database.</a> This allows you to: <ul><li>Control your master data</li><li>Utilise up-to-date Business and Director information, enhancing your onboarding and qualification processes</li><li>Recieve alerts when your customer's and supplier's Credit Report changes</li></ul> <h2>Quick Start</h2> To start your Creditsafe Connect API integration you will need to have activated your account and set a password by following the instructions in your Welcome Email. If you have not received a Welcome Email please contact your Creditsafe Account Manager.</br></br>By default, you will have been setup on our Sandbox environment.</br></br> Using a REST API client construct an `/authenticate` POST request and enter your username & password (case-sensitive) into the POST body. A successful response will return an  `authentication token`.</br></br> Use the `authentication token` in an `Authorization` header on all other Creditsafe Connect calls as proof of your authenticity.  <h2>Environments</h2>Production Environment baseurl: <code> https://connect.creditsafe.com/v1 </code> </br> Sandbox Test Environment baseurl:  <code>https://connect.sandbox.creditsafe.com/v1</code> <h2>Resources</h2> <ul> <li><a href=\"https://creditsafe.github.io/connect-docs/cs_connectv1-15.html\">OpenAPI</a> specification.</li><li><a href=\"https://www.getpostman.com/collections/4406bbddb81c308db8ff\">Postman Collection</a> of the most common example calls to Creditsafe Connect.</li> <li><a href=\"https://connect-portal.creditsafe.com\"> A Front End Demo Site</a>. Use this as a quick easy way to validate your username & password and form requests.</li> <li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/categories/7000007071/folders/7000018640\"> Help Articles</a>  including: <ul><li>FAQs</li><li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000053487-connect-api-data-dictionaries\"> Data Dictionaries </a></li><li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000054765-connect-api-data-availability-per-country\"> Data Availability per Country </a></li><li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000054656-connect-api-feature-availability-per-country\"> Feature Availability Matrix</a></li></ul></ul>
 *
 * OpenAPI spec version: 1.5.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.34
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * CreditsafeGlobalDataReportsLtdShareCapitalStructure Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CreditsafeGlobalDataReportsLtdShareCapitalStructure implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Creditsafe.GlobalData.Reports.LtdShareCapitalStructure';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'nominal_share_capital' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsFinancialValue1SystemDecimal',
'issued_share_capital' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsFinancialValue1SystemDecimal',
'share_capital_currency' => 'string',
'number_of_shares_issued' => 'int',
'share_holders' => '\Swagger\Client\Model\CreditsafeGlobalDataReportsShareHolder[]'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'nominal_share_capital' => null,
'issued_share_capital' => null,
'share_capital_currency' => null,
'number_of_shares_issued' => 'int64',
'share_holders' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'nominal_share_capital' => 'nominalShareCapital',
'issued_share_capital' => 'issuedShareCapital',
'share_capital_currency' => 'shareCapitalCurrency',
'number_of_shares_issued' => 'numberOfSharesIssued',
'share_holders' => 'shareHolders'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'nominal_share_capital' => 'setNominalShareCapital',
'issued_share_capital' => 'setIssuedShareCapital',
'share_capital_currency' => 'setShareCapitalCurrency',
'number_of_shares_issued' => 'setNumberOfSharesIssued',
'share_holders' => 'setShareHolders'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'nominal_share_capital' => 'getNominalShareCapital',
'issued_share_capital' => 'getIssuedShareCapital',
'share_capital_currency' => 'getShareCapitalCurrency',
'number_of_shares_issued' => 'getNumberOfSharesIssued',
'share_holders' => 'getShareHolders'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['nominal_share_capital'] = isset($data['nominal_share_capital']) ? $data['nominal_share_capital'] : null;
        $this->container['issued_share_capital'] = isset($data['issued_share_capital']) ? $data['issued_share_capital'] : null;
        $this->container['share_capital_currency'] = isset($data['share_capital_currency']) ? $data['share_capital_currency'] : null;
        $this->container['number_of_shares_issued'] = isset($data['number_of_shares_issued']) ? $data['number_of_shares_issued'] : null;
        $this->container['share_holders'] = isset($data['share_holders']) ? $data['share_holders'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets nominal_share_capital
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsFinancialValue1SystemDecimal
     */
    public function getNominalShareCapital()
    {
        return $this->container['nominal_share_capital'];
    }

    /**
     * Sets nominal_share_capital
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsFinancialValue1SystemDecimal $nominal_share_capital nominal_share_capital
     *
     * @return $this
     */
    public function setNominalShareCapital($nominal_share_capital)
    {
        $this->container['nominal_share_capital'] = $nominal_share_capital;

        return $this;
    }

    /**
     * Gets issued_share_capital
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsFinancialValue1SystemDecimal
     */
    public function getIssuedShareCapital()
    {
        return $this->container['issued_share_capital'];
    }

    /**
     * Sets issued_share_capital
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsFinancialValue1SystemDecimal $issued_share_capital issued_share_capital
     *
     * @return $this
     */
    public function setIssuedShareCapital($issued_share_capital)
    {
        $this->container['issued_share_capital'] = $issued_share_capital;

        return $this;
    }

    /**
     * Gets share_capital_currency
     *
     * @return string
     */
    public function getShareCapitalCurrency()
    {
        return $this->container['share_capital_currency'];
    }

    /**
     * Sets share_capital_currency
     *
     * @param string $share_capital_currency share_capital_currency
     *
     * @return $this
     */
    public function setShareCapitalCurrency($share_capital_currency)
    {
        $this->container['share_capital_currency'] = $share_capital_currency;

        return $this;
    }

    /**
     * Gets number_of_shares_issued
     *
     * @return int
     */
    public function getNumberOfSharesIssued()
    {
        return $this->container['number_of_shares_issued'];
    }

    /**
     * Sets number_of_shares_issued
     *
     * @param int $number_of_shares_issued `int64` refers to the `long` type
     *
     * @return $this
     */
    public function setNumberOfSharesIssued($number_of_shares_issued)
    {
        $this->container['number_of_shares_issued'] = $number_of_shares_issued;

        return $this;
    }

    /**
     * Gets share_holders
     *
     * @return \Swagger\Client\Model\CreditsafeGlobalDataReportsShareHolder[]
     */
    public function getShareHolders()
    {
        return $this->container['share_holders'];
    }

    /**
     * Sets share_holders
     *
     * @param \Swagger\Client\Model\CreditsafeGlobalDataReportsShareHolder[] $share_holders share_holders
     *
     * @return $this
     */
    public function setShareHolders($share_holders)
    {
        $this->container['share_holders'] = $share_holders;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
